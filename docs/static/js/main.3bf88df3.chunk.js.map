{"version":3,"sources":["actions/Types.js","store/reducers/index.js","store/reducers/ReposReducers.js","store/index.js","actions/ReposActions.js","actions/index.js","graphql/repository/issues/GET_ISSUE.js","graphql/repository/issues/GET_ISSUE_COMMENTS.js","graphql/repository/issues/GET_ISSUES.js","graphql/repository/issues/labels/GET_LABELS.js","graphql/repository/issues/ADD_ISSUE.js","graphql/repository/issues/ADD_ISSUE_COMMENT.js","graphql/repository/issues/UPDATE_ISSUE.js","graphql/index.js","components/issues/issueComments.jsx","components/issues/labels/labels.jsx","components/head/head.jsx","views/post.js","components/issues/issues.jsx","views/home.js","views/edit.js","App.js","serviceWorker.js","index.js"],"names":["SET_CONFIG","Symbol","SET_PAGEINFO","SET_NEXTPAGE","SET_ISSUE","SET_ISSUES","combineReducers","setIssue","state","action","type","Types","data","Object","assign","setIssues","issues","console","log","setConfig","config","client","variables","owner","name","first","after","pageInfo","store","createStore","reducers","applyMiddleware","thunk","dispatch","setIssueEdit","edit","Repos","gql","GET_ISSUE","GET_ISSUE_EXPORT","GET_ISSUE_COMMENTS","GET_ISSUE_COMMENTS_EXPORT","GET_ISSUES","GET_ISSUES_EXPORT","GET_LABELS","GET_LABELS_EXPORT","ADD_ISSUE","ADD_ISSUE_EXPORT","ADD_ISSUE_COMMENT","ADD_ISSUE_COMMENT_EXPORT","UPDATE_ISSUE","UPDATE_ISSUE_EXPORT","IssuesComments","props","query","notifyOnNetworkStatusChange","loading","error","refetch","networkStatus","fetchMore","commentsEdges","repository","issue","comments","edges","localStorage","setItem","JSON","stringify","map","item","Card","className","border","key","node","id","dangerouslySetInnerHTML","__html","bodyHTML","IssuesLabels","fetchPolicy","labelsEdges","labels","CardLabels","Badge","Head","toIndex","e","history","push","onToAddNewSpace","onShowLabels","setState","showLabels","onLabelsClose","title","desc","message","spaces","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","onClick","go","NavDropdown","Item","Form","inline","FormControl","placeholder","Button","varint","Modal","show","this","onHide","animation","Header","closeButton","Title","Body","Footer","variant","Component","Post","scrollNew","scrollHeight","document","documentElement","scrollTop","clientHeight","lodding","getItem","getIssueComment","getChilder","parse","endCursor","number","parseInt","hasNextPage","newComments","newPages","alert","onCommentChange","value","target","comment","onUserChange","user","onAddComment","subjectId","body","mutate","mutation","then","res","issueComment","addComment","commentEdge","params","match","description","HasIssue","window","addEventListener","removeEventListener","CardIssue","BadgeLabel","pill","style","backgroundColor","color","Container","onChange","rows","defaultValue","connect","ownProps","Issues","issueEdges","toGithubComment","index","url","open","cardIssues","date","Date","createdAt","cardLabels","item2","stopPropagation","toEditIssues","toLocaleString","toIssuePost","alias","fallback-src","class","reactions","totalCount","Home","getNewPage","newPage","getNextPage","lastPageInfo","Edit","onChangeTitle","onAceValueChange","onAceLoad","onClickAddNewPost","labelIds","labelEdges","isChecked","filter","x","repositoryId","removeItem","onClickEditOldPost","issueState","onClickReturn","onShowCheckbox","checked","msg","titleStyle","fontSize","cg","now","manyDay","Math","floor","day","getDay","issueLables","isUpdate","le","includes","ButtonSubmit","ButtonReturn","CardTitle","EditorContent","mode","theme","onLoad","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CheckLable","Check","label","hidden","defaultChecked","Control","marginTop","ButtonGroup","undefined","location","token","setToken","CryptoJS","AES","decrypt","toString","enc","Utf8","httpLink","HttpLink","uri","headers","Authorization","ApolloClient","link","cache","InMemoryCache","App","path","exact","component","to","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bf88df3.chunk.js","sourcesContent":["export const SET_CONFIG = Symbol('SET_CONFIG')\nexport const SET_PAGEINFO = Symbol('SET_PAGEINFO')\nexport const SET_NEXTPAGE = Symbol('SET_NEXTPAGE')\nexport const SET_PREVIOUSPAGE = Symbol('SET_PREVIOUSPAGE')\nexport const GET_STATE = Symbol('GET_STATE')\nexport const SET_ISSUE = Symbol('SET_ISSUE')\nexport const SET_ISSUES = Symbol('SET_ISSUES')\nexport const SET_CLIENT = Symbol('SET_CLIENT')\nexport const SET_REPOS = Symbol('SET_REPOS')\nexport const SET_ISSUE_ADD_STATUS = Symbol('SET_ISSUE_ADD_STATUS')","import {combineReducers} from 'redux'\nimport { setIssue,setIssues,setConfig } from \"./ReposReducers\"\n\nexport default combineReducers({\n    setIssue,setIssues,setConfig\n})","// 它就是将来真正要用到的数据，我们将其统一放置在reducers.js文件\nimport defaultState from '../state.js'\nimport * as Types from '../../actions/Types'\nfunction setIssue(state = {},action){\n    // console.log(\"setIssue Type:\",action.type)\n    switch(action.type){\n        case Types.SET_ISSUE:\n            // state.issue = action.data\n            //console.log(\"得到\",state,\"data\",action,action.type)\n            //return state\n            // console.log(\"action.data\",action.data,state,typeof state)\n            state = action.data\n            return Object.assign({}, state) //直接返回state是不会自动的刷新的\n        default:\n            return state\n    }\n}\nfunction setIssues(state = {},action){\n    // console.log(\"setIssues Type:\",action.type)\n    switch(action.type){\n        case Types.SET_ISSUES:\n        state.issues = action.data\n        console.log(\"得到\",state,\"data\",action,action.type)\n        //return state\n        return Object.assign({},state)\n        default:\n        return state\n    }\n}\nfunction setConfig (state = {},action){\n    switch(action.type){\n        case Types.SET_CONFIG:\n            // console.log(\"设置配置\", action.data)\n            state.config = action.data\n            state.client = action.data.client\n            state.variables = {\n                owner: action.data.owner,\n                name: action.data.name,\n                first: 10,\n                after: null\n            }\n            return Object.assign({}, state)\n        case Types.SET_PAGEINFO:\n            state.pageInfo = state.data\n            return Object.assign({}, state)\n        case Types.SET_NEXTPAGE:\n            state.variables.after = action.data\n            // console.log(\"设置下一页的after变量\")\n            return Object.assign({}, state)\n        default:\n        //console.log(\"得到\",state,\"data\",action,action.type)\n        return state\n    }\n}\nfunction pageTitle (state = defaultState.pageTitle,action) {\n// 不同的action有不同的处理逻辑\n    switch (action.type) {\n        case 'SET_PAGE_TITLE':\n        return action.data\n        default:\n        return state\n    }\n}\n\nfunction user (state = defaultState.user, action){\n    switch (action.type) {\n        case 'SET_USER':\n        return action.data\n        default:\n        return state\n    }\n}\n\nexport {\n    setIssue,\n    setIssues,\n    setConfig,\n    pageTitle,\n    user\n}","// index.js\n// applyMiddleware: redux通过该函数来使用中间件\n// createStore: 用于创建store实例\nimport { applyMiddleware, createStore } from 'redux'\n\n// 中间件，作用：如果不使用该中间件，当我们dispatch一个action时，需要给dispatch函数传入action    \n// 对象；但如果我们使用了这个中间件，那么就可以传入一个函数，\n// 这个函数接收两个参数:dispatch和    getState。这个dispatch可以在将来的异步请求完成后使用，对于异步action很有用\nimport thunk from 'redux-thunk'\n\n// 引入reducer\nimport reducers from './reducers/index'\n\n// 创建store实例\nlet store = createStore(\n    reducers,\n    applyMiddleware(thunk)\n)\n//console.log(\"引入了store\",reducers)\nexport default store","import * as Types from \"./Types\"\nexport const setIssues = (data = {}) => {\n    return (dispatch)=>{\n        console.log(\"setIssues吉祥物\")\n        // client.query({\n        //     query: GET_ISSUSE, \n        //     variables: { owner: cg.owner, name: cg.name, first, after },    \n        // }).then(res=>{\n        //     dispatch({type:Types.SET_ISSUES, data: res.data.repository.issues})\n        // })\n    }\n}\n// // 设置post内容\nexport const setIssue = (data = {}) => {\n    return (dispatch)=>{\n        console.log(\"setIssue吉祥物\")\n\n        // client.query({query:repos.getIssue(number,first,after)}).then(res=>{\n        //     let issue = res.data.repository.issue\n        //     dispatch({type:Types.SET_ISSUE, data:issue})\n        // }) \n    }\n}\n// // 设置post内容之增加post\nexport const setIssueEdit = ( data = {})=> {\n    return (dispatch)=>{\n        console.log(\"setIssueEdit吉祥物\")\n        dispatch({type:Types.SET_ISSUE,data:{edit:\"吉祥物\"}})\n        // client.mutate({\n        //     mutation : repos.setIssueAdd(content,title)\n        // }).then(res=>{\n        //     console.log(\"增加后的结果\",res)\n        //     dispatch({type:Types.SET_ISSUE_ADD_STATUS, data:res})\n        // })\n    }\n}\n// // 异步获取内容\n// export const setRepos = (type,start,end) => {\n//     return (dispatch)=>{\n//         dispatch({type: Types.SET_REPOS})\n//     }\n//   };\n\n//   // 设置page信息\n//   export const setPageInfo = (data={})=>{\n//     return (dispatch)=>{\n//         dispatch({type: Types.SET_PAGEINFO, data})\n//     }\n//   }\n//   // 设置下一页信息\n//   export const setNextPage = (data={})=>{\n//     return (dispatch)=>{\n//         dispatch({type: Types.SET_NEXTPAGE, data})\n//     }\n//   }","import * as Repos from \"./ReposActions\";\nlet Actions = Repos\n// Repos\nexport const setIssues = Repos.setIssues;\n// export const setPageInfo = Repos.setPageInfo;\n// export const setNextPage = Repos.setNextPage;\n// // issue\nexport const setIssue = Repos.setIssue;\nexport const setIssueEdit = Repos.setIssueEdit;\n\n// All\nexport default Actions","import gql from \"graphql-tag\";\nexport default  gql`\nquery Issues($owner:String!, $name:String!, $number: Int!, $first: Int!, $after: String){\n  repository(owner: $owner, name: $name) {\n    issue(number: $number){\n      id\n      number\n      title\n      bodyHTML\n      body\n      createdAt\n      labels(first:$first,after:$after){\n        edges{\n          node{\n            id\n            name\n            color\n            description\n            url\n          }\n        }\n      }\n    }\n  }\n}\n`","import gql from \"graphql-tag\";\n/*\n{\n  \"owner\":\"abearxiong\",\n  \"name\":\"abearxiong.github.io\",\n  \"number\": 52,\n  \"first\": 10,\n  \"after\": null\n}\n*/\nexport default  gql`\nquery IssueComment($owner:String!, $name:String!, $number: Int!, $first: Int!, $after: String){\n  repository(owner: $owner, name: $name) {\n    issue(number: $number){\n      id\n\t\t\tcomments(first:$first,after:$after){\n       \tpageInfo {\n            endCursor\n            startCursor\n            hasNextPage\n            hasPreviousPage\n        }\n        edges{\n          node{\n            id\n            body\n            bodyHTML\n            bodyText\n          }\n        }\n      }\n    }\n  }\n}\n`","import gql from \"graphql-tag\";\nexport default  gql`\nquery Issues($owner:String!, $name:String!, $first: Int!, $after: String){\n    repository(owner: $owner, name: $name) {\n        issues(first: $first, after: $after, orderBy:{field:CREATED_AT,direction:DESC}){\n            totalCount\n            pageInfo {\n                endCursor\n                startCursor\n                hasNextPage\n                hasPreviousPage\n            } \n            edges {\n                node {\n                    id\n                    number\n                    title\n                    bodyHTML\n                    body\n                    author{\n                        login\n                    }\n                    createdAt\n                    comments {\n                        totalCount\n                    }\n                    labels(first:10){\n                        edges{\n                            node{\n                                id\n                                name\n                                color\n                                description\n                            }\n                        }\n                    }\n                    reactions(content:HEART){\n                        totalCount\n                    }\n                }\n            }\n        }\n    }\n}\n`","import gql from \"graphql-tag\";\nexport default  gql`\nquery IssuesLabels($owner: String!, $name: String!, $first: Int!, $after: String) {\n  repository(owner: $owner, name: $name) {\n    labels(first: $first, after: $after) {\n      totalCount\n      pageInfo {\n        endCursor\n        startCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          description\n          color\n          url\n          name\n        }\n      }\n    }\n  }\n}\n`\n","import gql from \"graphql-tag\";\n/*\n{\n  \"repositoryId\":\"MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=\",\n  \"title\":\"使用apollo测试的题目\",\n  \"body\":\"## 使用apollo测试后的body\",\n  \"labelIds\": [\"MDU6TGFiZWwxMzU2ODYzMTMz\"]\n}\n*/\nexport default gql`\nmutation CreateIssuePayload($repositoryId:ID!,$title:String!,$body:String!,$labelIds:[ID!]){\n  createIssue(input:{ repositoryId:$repositoryId,title:$title,,body:$body, labelIds: $labelIds}){\n   \tissue{\n\t  id\n      number\n      title\n      bodyHTML\n      body\n      author{\n        login\n      }\n      createdAt\n      labels(first:10){\n        edges{\n          node{\n            id\n            name\n            color\n            description\n          }\n        }\n      }\n    }\n  }\n}\n`","import gql from 'graphql-tag'\nexport default gql`\nmutation AddCommentPayload($subjectId: ID!,$body:String!){\n  addComment(input:{subjectId:$subjectId,body:$body}){\n    commentEdge{\n      node{\n        id\n        body\n        bodyHTML\n        bodyText\n      }\n    }\n  }\n}\n`","import gql from 'graphql-tag'\n/*\n{\n  \"id\":\"MDU6SXNzdWU1MTQwODM3NDQ=\",\n  \"state\": \"OPEN\",\n  \"title\":\"使用apollo测试的题目\",\n  \"body\":\"## 使用apollo测试后的body\\r\\n测试更新2\",\n  \"labelIds\": [\"MDU6TGFiZWwxMzU2ODYzMTMz\"]\n}\n*/\nexport default gql`\nmutation UpdateIssuePayload($id:ID!,$state:IssueState,$title:String!,$body:String!,$labelIds:[ID!]){\n  updateIssue(input:{ id:$id,state:$state,title:$title,,body:$body, labelIds: $labelIds}){\n   \tissue{\n\t\t\tid\n      number\n      title\n      bodyHTML\n      body\n      author{\n        login\n      }\n      state\n      createdAt\n      labels(first:10){\n        edges{\n          node{\n            id\n            description\n            color\n            url\n            name\n          }\n        }\n      }\n    }\n  }\n}\n`","import GET_ISSUE_EXPORT from \"./repository/issues/GET_ISSUE\"\nimport GET_ISSUE_COMMENTS_EXPORT from \"./repository/issues/GET_ISSUE_COMMENTS\"\nimport GET_ISSUES_EXPORT from \"./repository/issues/GET_ISSUES\"\nimport GET_LABELS_EXPORT from \"./repository/issues/labels/GET_LABELS\"\nimport ADD_ISSUE_EXPORT from \"./repository/issues/ADD_ISSUE\"\nimport ADD_ISSUE_COMMENT_EXPORT from \"./repository/issues/ADD_ISSUE_COMMENT\"\nimport UPDATE_ISSUE_EXPORT from \"./repository/issues/UPDATE_ISSUE\"\n\nexport const GET_ISSUE =  GET_ISSUE_EXPORT\nexport const GET_ISSUE_COMMENTS = GET_ISSUE_COMMENTS_EXPORT\nexport const GET_ISSUES =  GET_ISSUES_EXPORT\nexport const GET_LABELS = GET_LABELS_EXPORT\n\nexport const ADD_ISSUE = ADD_ISSUE_EXPORT\nexport const ADD_ISSUE_COMMENT = ADD_ISSUE_COMMENT_EXPORT\nexport const UPDATE_ISSUE = UPDATE_ISSUE_EXPORT\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { GET_ISSUE_COMMENTS} from \"../../graphql\"\nimport { Card } from \"react-bootstrap\";\n\nconst IssuesComments = (props) => (\n  <Query \n    query={GET_ISSUE_COMMENTS} \n    variables={ props.variables }\n    notifyOnNetworkStatusChange  \n    >\n    {({ loading, error, data, refetch, networkStatus,fetchMore  }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) {\n            console.log(error)\n            return <p>Error :(</p>;\n        }\n      // console.log(\"状态码\",networkStatus )\n      // console.log(\"内容\", data)\n    //   console.log(\"变量\",props.variables)\n      // console.log(\"页面\",props.pageInfo)\n    //   console.log(\"comments data:\", data)\n      let commentsEdges = data.repository.issue.comments.edges\n      // let totalCount = data.repository.issues.totalCount\n      let pageInfo = data.repository.issue.comments.pageInfo\n      localStorage.setItem(\"commentPageInfo\",JSON.stringify(pageInfo))\n      localStorage.setItem(\"commentsLodding\",false)\n      return (\n        <>\n            {\n                commentsEdges.map(item=>{\n                    return (<Card className=\"post-comment\" border=\"light\" key={item.node.id} >\n                            <Card border=\"light\"  dangerouslySetInnerHTML={{ __html: item.node.bodyHTML }}></Card>\n                    </Card>)\n                })\n            }\n        </>\n      );\n    }}\n  </Query>\n);\nexport default IssuesComments;","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport {GET_LABELS} from \"../../../graphql\"\nimport { Card, Badge} from \"react-bootstrap\";\n\nconst IssuesLabels = (props) => (\n  <Query \n    query={GET_LABELS} \n    variables={ props.variables }\n    notifyOnNetworkStatusChange  \n    fetchPolicy=\"cache-and-network\"\n    >\n    {({ loading, error, data, refetch, networkStatus,fetchMore  }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n    //   console.log(\"状态码\",networkStatus )\n      // console.log(\"内容\", data)\n      console.log(\"变量\",props.variables)\n      // console.log(\"页面\",props.pageInfo)\n      let labelsEdges = data.repository.labels.edges\n    //   let totalCount = data.repository.labels.totalCount\n      let pageInfo = data.repository.labels.pageInfo\n      localStorage.setItem(\"pageInfo\",JSON.stringify(pageInfo))\n    //   localStorage.setItem(\"labelsLodding\",false)\n      let CardLabels = labelsEdges.map(item=>{\n        return <Badge >{item.node.name}</Badge>\n      })\n      return (\n        <Card border=\"light\" className=\"Labels-wrapper\">\n            <div>{CardLabels}\n            </div>\n        </Card>\n      );\n    }}\n  </Query>\n);\nexport default IssuesLabels;","import React, { Component } from 'react';\nimport { Button, Navbar, Nav, NavDropdown, Form, FormControl, Modal } from 'react-bootstrap';\nimport './head.scss'\nimport IssuesLabels from \"../issues/labels/labels\"\nclass Head extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"head\",\n            desc: \"显示关于应用中的头部的信息\",\n            message: \"test\",\n            spaces: [],\n            showLabels: false\n        };\n        // console.log(\"props:\", props, window.location.href)\n    }\n    componentDidMount() {\n\n    }\n    toIndex = (e) => {\n        //console.log(e)\n        //console.log(\"props\",this.props,'state',this.state)\n        this.props.history.push(\"/\")\n    }\n    onToAddNewSpace = (e) => {\n        //console.log(\"添加新的内容\")\n        this.props.history.push(\"/edit/new\")\n    }\n    onShowLabels = () => {\n        this.setState({\n            showLabels: true\n        })\n    }\n    onLabelsClose = () =>{\n        this.setState({\n            showLabels: false\n        })\n    }\n    render() {\n        return (\n            <Navbar className=\"Header\" bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#\">GitHub空间</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {/* <Nav.Link href=\"#\">Home</Nav.Link> */}\n                        <Nav.Link onClick={e => this.onToAddNewSpace()}>增加</Nav.Link>\n                        <Nav.Link onClick={e => this.onShowLabels()}>标签</Nav.Link>\n                        <Nav.Link onClick={e=>this.props.history.go(-1)}>返回</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"ac\">Action</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button varint=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n                <Modal show={this.state.showLabels} onHide={e=>this.onLabelsClose()} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>显示标签</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <IssuesLabels variables={this.props.state.setConfig.variables}/>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={e=>this.onLabelsClose()}>\n                            Close\n                        </Button>\n                        {/* <Button variant=\"primary\" onClick={e=>this.onLabelsClose()}>\n                                Save Changes\n                        </Button> */}\n                    </Modal.Footer>\n                </Modal>\n            </Navbar>\n\n        );\n    }\n}\n\nexport default Head\n","import React, { Component } from \"react\";\nimport {Container,Card,Button, Badge } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { setIssue } from \"../actions\";\nimport {GET_ISSUE} from \"../graphql\"\nimport Comments from \"../components/issues/issueComments\"\nimport './post.scss'\nimport Head from '../components/head/head'\nimport {ADD_ISSUE_COMMENT} from \"../graphql\";\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    //console.log(props)\n    let params = props.match.params;\n    let number = params.number ? params.number : 6;\n    this.state = { \n     description: \"显示post的页面\",\n     number,\n     newPages: []\n    };\n  }\n  componentDidMount() {\n    let number = this.state.number;\n    let pageInfo = { endCursor: null, hasNextPage: true  }\n    localStorage.setItem(\"commentPageInfo\",JSON.stringify(pageInfo))\n    localStorage.setItem(\"commentsLodding\",false)\n\n    console.log(\"Post初始化\", number);\n    let { config, client} = this.props.state.setConfig\n    let variables = {\n      owner: config.owner,\n      name: config.name,\n      number: parseInt(number),\n      first: 100,\n      after: null\n    }\n    client.query({\n      query: GET_ISSUE,\n      variables: variables\n    }).then(res=>{\n      // console.log(\"getdata\",res)\n      this.setState({\n        HasIssue: true,\n        issue: res.data.repository.issue,\n\n      })\n    })\n    this.getIssueComment()\n    window.addEventListener('scroll',this.scrollNew)\n    let user = localStorage.getItem(\"user\")\n    this.setState({\n      user\n    })\n  }\n  componentWillUnmount (){\n    window.removeEventListener('scroll',this.scrollNew)\n  }\n  scrollNew = ()=>{\n    let scrollHeight = document.documentElement.scrollHeight\n    let scrollTop = document.documentElement.scrollTop\n    let clientHeight = document.documentElement.clientHeight\n    let lodding = localStorage.getItem(\"commentsLodding\")\n    // console.log(\"height\",scrollHeight,scrollTop,clientHeight)\n    if(scrollTop + clientHeight > scrollHeight - 2&&lodding!==\"lodding\"){\n      // 单纯的相等的情况会出现 浮点数的情况，就不能执行\n      this.getIssueComment()\n      // console.log(\"新一页\")\n      localStorage.setItem(\"commentsLodding\",\"lodding\")\n    }\n  }\n\n  getChilder =(pageInfo) =>{\n    // console.log(\"父层\", pageInfo)\n  }\n  getIssueComment = () =>{\n        // window.removeEventListener(\"scroll\",this.scrollNew) // 因为奇葩的问题导致内容重复问题\n        let pageInfo = JSON.parse(localStorage.getItem(\"commentPageInfo\"))\n        let after = pageInfo.endCursor\n        let variables = this.props.state.setConfig.variables\n        variables.after = after\n        variables.number = parseInt(this.state.number)\n        // console.log(\"variables:\",variables)\n        if(!pageInfo.hasNextPage){\n          alert(\"没有更多了\")\n          // window.removeEventListener(\"scroll\",this.scrollNew)\n          return \n        }\n        // console.log(\"key:\", pageInfo.endCursor)\n        let newComments = (<Comments \n          key = {pageInfo.endCursor}\n          variables={variables} \n          props={{...this.props}} \n          />    )\n        let newPages = this.state.newPages\n        newPages.push(newComments)\n        // console.log(newPages)\n        this.setState({\n          newPages,\n        })\n        // setTimeout(this.getIssueComment(), 5000)      \n  }\n  onCommentChange= (e)=>{\n    let value = e.target.value\n    console.log(value,e)\n    this.setState({\n      comment: value\n    })\n  }\n  onUserChange= (e)=>{\n    let value = e.target.value\n    console.log(value,e)\n    this.setState({\n      user: value\n    })\n    localStorage.setItem(\"user\",value)\n  }\n  onAddComment = ()=>{\n    let { client} = this.props.state.setConfig\n    let variables = {\n      subjectId : this.state.issue.id,\n      body: this.state.comment + \"\\n联系方式:\" + this.state.user\n    }\n    client.mutate({\n      mutation: ADD_ISSUE_COMMENT,\n      variables: variables\n    }).then(res=>{\n      console.log(\"add issue comment\", res)\n      let issueComment = res.data.addComment.commentEdge.node\n      this.setState({\n        issueComment\n      })\n    })\n  }\n  render() {\n    let CardIssue;\n    if(this.state.HasIssue){\n      let issue = this.state.issue\n      let BadgeLabel =  issue.labels.edges.map(item=>\n          <Badge pill  style={{backgroundColor:\"#\"+item.node.color }} id={item.node.id} key={item.node.id} title={item.node.description}>\n              {item.node.name} \n          </Badge>) \n      CardIssue = (\n        <Card className=\"post-comments\" >\n          <div>\n            {issue.title} \n          </div>\n          <div>\n          {BadgeLabel}\n          </div>\n          <Card border=\"light\"  dangerouslySetInnerHTML={{ __html: issue.bodyHTML }}></Card>\n        </Card>\n      )\n    }\n    \n    return (\n      <Container className=\"xx-space-post\">\n         <Head {...this.props}/>\n        {CardIssue}\n        <Card className=\"post-add-comments\" border=\"dark\">\n          <div className=\"post-add-comments-title\">添加评论</div>\n          <textarea className=\"post-add-comment-textarea\" onChange={e=>this.onCommentChange(e)} rows=\"4\">\n\n          </textarea>\n          <input id=\"post-user\" onChange={e=>this.onUserChange(e)} defaultValue={this.state.user} placeholder=\"联系方式：\"/>\n          <Button onClick={e=>this.onAddComment()}>确定</Button>\n        </Card>\n        <Card border=\"info\" className=\"post-comments\">\n          <div className=\"post-comments-title\">显示评论</div>\n          {this.state.newPages.map(item=>item)}\n          {\n            this.state.issueComment?\n            (<Card dangerouslySetInnerHTML={{__html:this.state.issueComment.bodyHTML}}></Card>)\n            :\"\"\n          }\n        </Card>\n\n      </Container>\n    );\n  }\n}\n\n// mapStateToProps：将state映射到组件的props中\nconst mapStateToProps = state => {\n  console.log(\"posts-state 映射\", state);\n  return {\n    state\n  };\n};\n// mapDispatchToProps：将dispatch映射到组件的props中\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setIssue(data) {\n      dispatch(setIssue(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Post);\n//export default Post;\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport {GET_ISSUES} from \"../../graphql\"\nimport { Card, Badge} from \"react-bootstrap\";\n\nconst Issues = (props) => (\n  <Query \n    query={GET_ISSUES} \n    variables={ props.variables }\n    notifyOnNetworkStatusChange  \n    fetchPolicy=\"cache-and-network\"\n    >\n    {({ loading, error, data, refetch, networkStatus,fetchMore  }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      // console.log(\"状态码\",networkStatus )\n      // console.log(\"内容\", data)\n      // console.log(\"变量\",props.variables)\n      // console.log(\"页面\",props.pageInfo)\n      let issueEdges = data.repository.issues.edges\n      // let totalCount = data.repository.issues.totalCount\n      let pageInfo = data.repository.issues.pageInfo\n      localStorage.setItem(\"pageInfo\",JSON.stringify(pageInfo))\n      localStorage.setItem(\"issuesLodding\",false)\n      let toGithubComment = (index) =>{\n        let url = 'https://github.com/abearxiong/abearxiong.github.io/issues/' + index\n        window.open(url)\n      }\n      let toEditIssues = (e, index) => {\n        // e.preventdefault().\n        e.stopPropagation()\n        console.log(\"editIssues\", this)\n        // TODO: 判断是否缓存有内容\n        props.props.history.push(\"/edit/\"+index)\n      }\n      let toIssuePost = (e, index)=>{\n        e.stopPropagation()\n        console.log(\"editIssues\", this)\n        props.props.history.push(\"/post/\"+index)\n      }\n      const cardIssues = issueEdges.map(item => {\n        let date = new Date(item.node.createdAt);\n        let cardLabels = item.node.labels.edges.map(item2=>{\n            return (<Badge pill  style={{backgroundColor:\"#\"+item2.node.color }} id={item2.node.id} key={item2.node.id} title={item2.node.description}>\n            {item2.node.name} \n         </Badge>)\n        })\n        return (\n        <Card key={item.node.id}>\n            <Card.Header onClick={e=>toGithubComment(item.node.number)}>{item.node.title}<Badge variant=\"light\" onClick={e=>toEditIssues(e, item.node.number)} title={item.node.id}>编辑</Badge></Card.Header>\n            <Card.Title>{date.toLocaleString()}</Card.Title>\n            <Card.Body onClick={e=>toIssuePost(e,item.node.number)}>\n                { cardLabels }\n                <Card border=\"light\"  dangerouslySetInnerHTML={{ __html: item.node.bodyHTML }}></Card>\n            </Card.Body>    \n            <Card.Footer>\n              <Badge variant=\"light\" onClick={e=>toGithubComment(item.node.number)}>\n                    <g-emoji\n                      alias=\"heart\"\n                      fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\"\n                      class=\"emoji mr-1\"\n                    >\n                      ❤️\n                    </g-emoji>\n                  {item.node.reactions.totalCount}\n              </Badge>\n\n              <Badge variant=\"light\" onClick={e=>toGithubComment(item.node.number)}>\n                <g-emoji\n                  class=\"g-emoji\"\n                  alias=\"speech_balloon\"\n                  fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png\"\n                >\n                  💬\n                </g-emoji>\n                {item.node.comments.totalCount}\n              </Badge>\n            </Card.Footer>\n        </Card>\n        )}\n      )\n      return (\n        <Card border=\"light\" className=\"issues-wrapper\">\n            {cardIssues}\n        </Card>\n      );\n    }}\n  </Query>\n);\nexport default Issues;","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { Component } from \"react\";\nimport {Container, Card} from \"react-bootstrap\";\nimport { setIssues } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport Head from \"../components/head/head\";\nimport Issues from \"../components/issues/issues\"\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"首页\",\n      description: \"这里是显示内容的主页\",\n      message: \"test\",\n      spaces: [],\n      newPages:[],\n      lastPageInfo: {},\n    };\n  }\n  componentDidMount() {\n    let pageInfo = { endCursor: null, hasNextPage: true  }\n    localStorage.setItem(\"pageInfo\",JSON.stringify(pageInfo))\n    localStorage.setItem(\"issuesLodding\",false)\n    window.addEventListener('scroll',this.scrollNew)\n    // console.log(this.state.description)\n    this.getNewPage();\n  }\n  componentWillUnmount (){\n    window.removeEventListener('scroll',this.scrollNew)\n  }\n  scrollNew = ()=>{\n    let scrollHeight = document.documentElement.scrollHeight\n    let scrollTop = document.documentElement.scrollTop\n    let clientHeight = document.documentElement.clientHeight\n    let lodding = localStorage.getItem(\"issuesLodding\")\n    // console.log(\"height\",scrollHeight,scrollTop,clientHeight)\n    if(scrollTop + clientHeight > scrollHeight - 2&&lodding!==\"lodding\"){\n      // 单纯的相等的情况会出现 浮点数的情况，就不能执行\n      this.getNewPage()\n      // console.log(\"新一页\")\n      localStorage.setItem(\"issuesLodding\",\"lodding\")\n    }\n  }\n  getNewPage = ()=>{\n    // window.removeEventListener(\"scroll\",this.scrollNew) // 因为奇葩的问题导致内容重复问题\n    let pageInfo = JSON.parse(localStorage.getItem(\"pageInfo\"))\n    let after = pageInfo.endCursor\n    let variables = this.props.state.setConfig.variables\n    variables.after = after\n    if(!pageInfo.hasNextPage){\n      alert(\"没有更多了\")\n      window.removeEventListener(\"scroll\",this.scrollNew)\n      return \n    }\n    let key = pageInfo.endCursor\n    let newPage = (<Issues \n      key = {key}\n      variables={variables} \n      props={{...this.props}}\n      getNextPage={this.getNextPage} \n      \n      />    )\n    let newPages = this.state.newPages\n    newPages.push(newPage)\n    // console.log(newPages)\n    this.setState({\n      newPages,\n    })\n  }\n  render() { \n    return (\n      <Container className=\"xx-space\">\n        <Head {...this.props} />\n        <Card border=\"light\"> \n            {this.state.newPages.map(item=>item)}\n        </Card>\n      </Container>\n    );\n  }\n}\n\n// mapStateToProps：将state映射到组件的props中\nconst mapStateToProps = state => {\n  console.log(\"home-state 映射\", state);\n  return {\n    state\n  };\n};\n// mapDispatchToProps：将dispatch映射到组件的props中\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setIssues(data) {\n      dispatch(setIssues(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React, { Component } from 'react';\nimport {Container,Card,Button,Form, ButtonGroup, Badge} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { setIssueEdit } from '../actions';\nimport AceEditor from \"react-ace\";\n\n// import \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\n// import \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport \"./edit.scss\"\nimport Head from '../components/head/head'\nimport {ADD_ISSUE,GET_LABELS,GET_ISSUE,UPDATE_ISSUE} from \"../graphql\"\n\n\nclass Edit extends Component {\n  constructor(props){\n    super(props)\n    // console.log(\"props:\",props)\n    let params = props.match.params\n    let number = params.number?params.number:\"new\"\n    //let content = \"今天发生了什么愉快的事情呢？\"\n    this.state = {\n      msg:\"msg hhh\",\n      number,\n      // title,\n      // value:initialValue,\n      value: \"真是开心啊\",//Plain.deserialize(\"真是开心啊\"),\n      createdAt: new Date().toLocaleString(),\n      titleStyle:{\n        color: '#cccccc',\n        fontSize: 10\n      },\n      labelEdges: [],\n      issue:{\n        labels:{\n          edges:[]\n        }\n      }\n    }\n  }  \n  componentDidMount () {\n    // 获取Labels\n    let client = this.props.state.setConfig.client\n    let cg = this.props.state.setConfig.config\n    client.query({\n      query: GET_LABELS, \n      variables: { owner: cg.owner, name: cg.name, first:100},    \n      }).then(res=>{\n          let labelEdges = res.data.repository.labels.edges\n          // console.log(\"res\",labelEdges)\n          this.setState({labelEdges})\n\n    })\n    let setIssueEdit = this.props.setIssueEdit\n    let number = this.state.number\n    setIssueEdit()\n    if(number === \"new\"){\n      /* q = d - 1324 * 24 * 60 * 60  \n      *  1443365529298 是第一天\n      *  Sun Sep 27 2015 22:52:09 GMT+0800 (中国标准时间)\n      */\n      let now = new Date()\n      let show_day = [\"星期天\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]\n      let manyDay = Math.floor((now - 1443365529298)/(24 * 60 * 60 * 1000)) + 1// 往下 取整\n      let day = now.getDay()\n      let title = `奇幻旅程${manyDay} ${show_day[day]}`\n      // 如果新建文章的情况下，如果本地已经有了的话，直接设置\n      title = localStorage.getItem('title')?localStorage.getItem('title'):title\n      localStorage.setItem('title', title)\n      let value = localStorage.getItem('content')?localStorage.getItem('content'):\"真是开心啊\"\n      localStorage.setItem('content',value)\n      this.setState({title, value})\n    }else{\n      // setIssueEdit({number}) // number first after 后面两个是评论的\n      // console.log(\"number\",number,typeof number)\n      // 获取具体的某一个issue的内容\n      client.query({\n        query: GET_ISSUE,\n        variables:{\n          owner:cg.owner,\n          name: cg.name,\n          number: parseInt(number),\n          first: 100,\n          after: null\n        }\n      }).then(res=>{\n        // console.log(\"get issue\",res.data)\n        let issue = res.data.repository.issue\n        let labelEdges = issue.labels.edges\n        let issueLables = labelEdges.map(item=>item.node.name)\n        this.setState({\n          isUpdate: true,\n          issue:issue,\n          // issueId: issue.id,\n          issueLables: issueLables,\n          // issueCreatedAt: issue.createdAt,\n          // issueBody: issue.body,\n          // issueNumber: issue.number,\n          // issueTitle: issue.title,\n          issueState: \"OPEN\",\n          title: issue.title,\n          value: issue.body,//Plain.deserialize(issue.body),\n        })\n        localStorage.setItem(\"title\", issue.title)\n        let le = this.state.labelEdges\n        le.map(item=>{\n          // console.log(item.node.name,issueLables)\n          if(issueLables.includes(item.node.name) ){\n            // console.log(item.node.name,issueLables,\"IN\")            \n            item.node.checked = true\n            item.node.isChecked = true\n          }\n          return item\n        })\n        this.setState({\n          labelEdges:le\n        })\n      })\n    }\n    // console.log(\"Edit初始化\",number,this.props)\n  }\n  onChangeTitle = (e)=>{\n    let title = e.target.value\n    if (title !== this.state.title) {\n      localStorage.setItem('title', title)\n    }\n    this.setState({title})\n    console.log(\"change title\",title)\n  }\n\n  onAceValueChange = (value) =>{\n    console.log(value,this.state.value)\n    if (value !== this.state.value) {\n      localStorage.setItem('content', value)\n    }\n    this.setState({\n      value: value\n    })\n  }\n  onAceLoad = () =>{\n    console.log(\"ace is lodding\")\n  }\n  onClickAddNewPost = ()=>{\n    const { client,config } = this.props.state.setConfig\n    // COMPLETED: 1. 获取actions 2. 执行提交内容\n    // const value = JSON.stringify(this.state.value.document)\n    let value = localStorage.getItem('content')\n    let title = localStorage.getItem('title')\n    let labelIds= this.state.labelEdges.map(item=>{\n      if(item.node.isChecked){\n        return item.node.id\n      }else{\n        return null\n      }\n    })\n    labelIds = labelIds.filter(function(x){return x!==null})\n    let variables = {repositoryId:config.repositoryId,labelIds,body:value,title}\n    // console.log(value,labelIds,variables)\n    // PRETODO: 获取lables和设置lables，获取仓库ID\n    client.mutate({\n          mutation : ADD_ISSUE,\n          variables\n      }).then(res=>{\n        // console.log(\"res结果\",res)\n        // this.props.history.push(\"/\")\n        // window.location.href=\"/\"\n        this.props.history.push(\"/\")\n      })\n    localStorage.removeItem('title')\n    localStorage.removeItem('content')\n  }\n  onClickEditOldPost = () => {\n    const { client } = this.props.state.setConfig\n    let value = localStorage.getItem(\"content\")\n    let title = localStorage.getItem(\"title\")\n    let state = this.state.issueState\n    let labelIds= this.state.labelEdges.map(item=>{\n      if(item.node.isChecked){\n        return item.node.id\n      }else{\n        return null\n      }\n    })\n    labelIds = labelIds.filter(function(x){return x!==null})\n    console.log(title,\"typeof title\",typeof title)\n    let variables = {id:this.state.issue.id,state,labelIds,body:value,title}\n    console.log(value,labelIds,variables,typeof this.state.issue.id)\n    // PRETODO: 获取lables和设置lables，获取仓库ID\n    client.mutate({\n          mutation : UPDATE_ISSUE,\n          variables\n      }).then(res=>{\n        // console.log(\"res结果\",res)\n        this.props.history.push(\"/\")\n      })\n    localStorage.removeItem('title')\n    localStorage.removeItem('content')\n  }\n  onClickReturn = ()=>{\n    this.props.history.push(\"/\")\n  }\n  onShowCheckbox=(e)=>{\n    // console.log(\"e.target.data\",e.target.value,e.target,e.target.checked,this.state.labelEdges)\n    let isChecked = e.target.checked\n    let value = e.target.value\n    let labelEdges = this.state.labelEdges\n    if(isChecked){\n      labelEdges[value].node.isChecked=true\n    }else{\n      labelEdges[value].node.isChecked=false\n    }\n    this.setState({labelEdges})\n    console.log(\"this.labels\",this.state.labelEdges)\n  }\n  render() {\n    // console.log(\"this.props\",this.props)\n    let ButtonSubmit = <Button onClick = {(e)=>this.onClickAddNewPost(e)}>增加</Button>\n    let ButtonReturn = <Button variant=\"dark\" onClick = {(e)=>this.onClickReturn(e)}>返回</Button>\n    let CardTitle = <Card border=\"light\" style={this.state.titleStyle}>{this.state.createdAt}</Card>\n    // http://securingsincity.github.io/react-ace/\n    let EditorContent = (\n    <AceEditor\n        placeholder=\"Your Markdown\"\n        mode=\"markdown\"\n        theme=\"xcode\"\n        name=\"ace-edit-content\"\n        onLoad={this.onAceLoad}\n        onChange={this.onAceValueChange}\n        fontSize={14}\n        showPrintMargin={false}\n        showGutter={true}\n        highlightActiveLine={true}\n        value={this.state.value}\n        setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: true,\n        showLineNumbers: true,\n        tabSize: 2,\n        }}/>\n            )\n    let CheckLable = this.state.labelEdges.map((item,index)=>{\n      return (<Form.Check \n            key={item.node.id}\n            type=\"checkbox\"\n            name=\"check-labels\"\n            label={item.node.name}\n            value={index}\n            onChange={e=>this.onShowCheckbox(e)}\n            hidden={item.node.hidden}\n            defaultChecked={item.node.checked}\n      /> )\n    })\n    if(this.state.isUpdate){\n      // TODO: 编辑确定，更新内容\n      ButtonSubmit = <Button onClick = {(e)=>this.onClickEditOldPost(e)}>更新</Button>\n      CardTitle = <Card.Title style={this.state.titleStyle}>{new Date(this.state.issue.createdAt).toLocaleString()}</Card.Title>\n    }\n    // console.log(\"this.state.data\",this.state)\n    return (  \n        <Container className=\"xx-space-edit\">\n        <Head {...this.props}/>\n          <Card>\n            <Card className=\"edit-content\">\n              <Card.Header><Form.Control type=\"text\" onChange = {(e)=>this.onChangeTitle(e)} placeholder=\"标题\" defaultValue={this.state.title} /></Card.Header>\n              <div>\n              {\n                this.state.issue.labels.edges.map(item=>\n                  <Badge pill  style={{backgroundColor:\"#\"+item.node.color }} id={item.node.id} key={item.node.id} title={item.node.description}>\n                      {item.node.name} \n                  </Badge>) \n              }\n              </div>\n              <Card.Body>\n              <Card className=\"edit-wrapper\" border=\"light\">\n                <Card className=\"edit\" border=\"light\" >\n                  { EditorContent }\n                </Card>\n                <Card className=\"edit-aside\" border=\"light\" >\n                  {CardTitle}\n                  <div style={{marginTop: 20}} title=\"要点两下\">\n                  {CheckLable}\n                  </div>\n                </Card>\n              </Card> \n                </Card.Body>\n              <Card.Footer>\n                <Card>\n                  <ButtonGroup>\n                    {ButtonSubmit}\n                    {ButtonReturn}\n                  </ButtonGroup>\n                </Card>\n              </Card.Footer>\n            </Card>\n          </Card>\n        </Container>\n    );\n  }\n  \n}\n\n// mapStateToProps：将state映射到组件的props中\nconst mapStateToProps = (state) => {\n  console.log(\"state 映射\",state)\n  if(state.setIssue.data !== undefined){\n    window.location.href = \"/\"\n    // console.log(\"setIssue data\", state.setIssue.data)\n  }\n  return {\n      state\n  }\n}\n// mapDispatchToProps：将dispatch映射到组件的props中\nconst mapDispatchToProps = (dispatch, ownProps) => {\nreturn {\n  setIssueEdit(data){\n    dispatch(setIssueEdit(data))\n  }\n}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit)\n//export default Edit;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Route,HashRouter, Switch,Redirect } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport {ApolloClient}from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport CryptoJS from 'crypto-js'\nimport store from './store';\nimport Post from './views/post';\nimport Home from './views/home';\nimport Edit from './views/edit';\nimport * as Types from \"./actions/Types\"\n// import Head from './components/head/head'\nimport './App.css';\n// 私有token上传会自动把token无效；所以加密一下啊 解密\n// import CryptoJS from 'crypto-js'\n// var decrypted = CryptoJS.AES.decrypt(token,key);\n// let token = decrypted.toString(CryptoJS.enc.Utf8);//转化为utf8\nconst key = \"xx-space\"\nconst token = 'U2FsdGVkX19B3HPXWKdG/BW8oy5ld+5t4WogKry+ve6B0RWRGtSjQlGr32zwr4nn7zBE9woFkj4mWNj8jZv1dg==' // 私有限制权限的token\nconst owner = 'abearxiong'  // 仓库拥有者\nconst name = 'abearxiong.github.io' // 仓库名字\nconst repositoryId = \"MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=\"\nconst config = {\n  key,\n  token,\n  owner,\n  name,\n  repositoryId\n}\nvar decrypted = CryptoJS.AES.decrypt(config.token,config.key);\nlet setToken = decrypted.toString(CryptoJS.enc.Utf8);//转化为utf8\n//console.log(token)\nconst httpLink = new HttpLink({\n    uri: 'https://api.github.com/graphql', // 配置请求url \n    headers: { // 配置header\n        Authorization: `Bearer ${setToken}`\n    }\n})\nconst client =  new ApolloClient({\n    link:  httpLink,\n    cache: new InMemoryCache() // 缓存\n})\n// client.query({\n//   query: GET_ISSUES,variables: { owner: \"abearxiong\", name: \"abearxiong.github.io\", first:10 },    }).then(res=>{\n//     console.log(\"测试client\",res)\n//   })\nclass App extends Component {\n  constructor(props){\n    super(props);\n    store.dispatch({type: Types.SET_CONFIG, data: { ...config, client }}) // store分发举例，其他库，自动配置\n    this.state = {\n      description: \"设置关于起始显示的地方\"\n    }\n  };\n  componentDidMount () {\n    // console.log(\"App初始化完成\",store)\n    \n  }\n  render() {\n    return (   \n      <Provider store = {store}>\n        <ApolloProvider client={client}>\n           <HashRouter>\n              <Switch>\n                  <Route path=\"/\" exact component={Home}/>\n                  <Route path=\"/post/:number\" component={Post}/>\n                  <Route path=\"/edit/:number\" component={Edit}/>\n                  <Redirect to=\"/\" />\n              </Switch>\n            </HashRouter>\n          </ApolloProvider>   \n      </Provider>   \n    );\n  }\n}\n// // mapStateToProps：将state映射到组件的props中\n// const mapStateToProps = (state) => {\n//   return {\n//       user: state.user,\n//   }\n// }\n// // mapDispatchToProps：将dispatch映射到组件的props中\n// const mapDispatchToProps = (dispatch, ownProps) => {\n// return {\n//   setConfig (data) {\n//       dispatch(setConfig(data))\n//   }\n// }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport '@github/g-emoji-element'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}