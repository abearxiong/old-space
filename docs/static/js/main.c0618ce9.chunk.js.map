{"version":3,"sources":["store/state.js","actions/ReposActionsType.js","store/reducers/index.js","store/reducers/ReposReducers.js","store/index.js","actions/ReposActions.js","graphql/repository.js","actions/Config.js","actions/index.js","views/post.js","components/head/head.jsx","views/home.js","views/edit.js","App.js","serviceWorker.js","index.js"],"names":["config","pageTitle","user","SET_ISSUE","Symbol","SET_ISSUES","SET_REPOS","combineReducers","setIssue","state","defaultState","action","type","Types","issue","data","Object","assign","setIssues","issues","console","log","store","createStore","reducers","applyMiddleware","thunk","client","repos","Repository","this","owner","name","labels","labelIds","repositoryId","graphql","currentPage","first","after","gql","number","content","title","alert","setConfig","cf","token","CryptoJS","AES","decrypt","key","toString","enc","Utf8","httpLink","HttpLink","uri","headers","Authorization","ApolloClient","link","cache","InMemoryCache","Repos","dispatch","query","getIssues","then","res","repository","getIssue","setIssueAdd","mutate","mutation","setRepos","start","end","Post","props","params","match","msg","setState","CardIssue","Card","className","Header","Title","createdAt","Body","dangerouslySetInnerHTML","__html","bodyHTML","Container","Button","onClick","e","handleClick","Component","connect","ownProps","Head","toIndex","history","push","toAddNewSpace","desc","message","spaces","window","location","href","ButtonGroup","Home","toGithubComment","index","url","open","addNewStyle","position","bottom","width","height","right","fontSize","border","borderRadius","lineHeight","textAlign","value","CardIssues","ButtonNext","ButtonPre","CardTotalCount","edges","pageInfo","totalCount","map","list","date","Date","node","toLocaleString","Footer","Badge","variant","alias","fallback-src","class","reactions","comments","hasPreviousPage","preClick","startCursor","hasNextPage","nextClick","endCursor","initialValue","Value","fromJSON","document","nodes","object","leaves","text","Edit","getType","chars","onChangeTitle","target","localStorage","setItem","onValueChange","JSON","stringify","toJSON","onClickAddNewPost","parse","item","join","removeItem","renderBlock","editor","next","attributes","children","onKeyDown","event","onSpace","onBackspace","onEnter","selection","isExpanded","startBlock","slice","offset","replace","preventDefault","setBlocks","wrapBlock","moveFocusToStartOfNode","delete","unwrapBlock","length","splitBlock","now","manyDay","Math","floor","day","getDay","createAt","titleStyle","color","getItem","ButtonSubmit","Form","Control","onChange","placeholder","defaultValue","style","App","path","exact","component","to","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8jBAAe,GACXA,OAAO,GACPC,UAAU,eACVC,KAAK,ICDIC,GAFaC,OAAO,cACRA,OAAO,aACPA,OAAO,cACnBC,EAAaD,OAAO,cAEpBE,GADaF,OAAO,cACRA,OAAO,cCFjBG,kBAAgB,CAC3BC,SCDJ,WAAsD,IAApCC,EAAmC,uDAA3BC,EAAaV,OAAOW,EAAO,uCACjD,OAAOA,EAAOC,MACV,KAAKC,EAIL,OAHAJ,EAAMK,MAAQH,EAAOI,KAGdC,OAAOC,OAAO,GAAGR,GACxB,QACA,OAAOA,IDPFS,UCUb,WAAuD,IAApCT,EAAmC,uDAA3BC,EAAaV,OAAOW,EAAO,uCAClD,OAAOA,EAAOC,MACV,KAAKC,EAIL,OAHAJ,EAAMU,OAASR,EAAOI,KACtBK,QAAQC,IAAI,eAAKZ,EAAM,OAAOE,EAAOA,EAAOC,MAErCI,OAAOC,OAAO,GAAGR,GACxB,QACA,OAAOA,MCHAa,EALHC,YACRC,EACAC,YAAgBC,M,i7FCdhBC,EACAC,ECgJWC,E,WAjJb,WAAY7B,GAAS,oBACnB8B,KAAKC,MAAQ/B,EAAO+B,MACpBD,KAAKE,KAAOhC,EAAOgC,KACnBF,KAAKG,OAASjC,EAAOiC,OAAP,mBAA4BjC,EAAOiC,OAAnC,KAA+C,GAC7DH,KAAKI,SAAWlC,EAAOkC,SAAWlC,EAAOkC,SAAW,2BACpDJ,KAAKK,aAAenC,EAAOmC,aAAenC,EAAOmC,aAAe,mCAChEL,KAAKM,QAAU,GACfN,KAAKO,YAAc,W,sDAEXzB,EAAM0B,EAAOC,EAAON,GAU5B,MATY,SAATrB,GACD0B,EAAQA,EAAM,SAAD,OAAWA,GAAQ,GAChCC,EAAOA,EAAM,WAAD,OAAYA,EAAZ,KAAqB,KAEjCD,EAAQA,EAAM,QAAD,OAAUA,GAAQ,GAC/BC,EAAOA,EAAM,YAAD,OAAaA,EAAb,KAAsB,IAEpCN,EAASA,EAAO,YAAD,OAAaA,EAAb,KAAwBH,KAAKG,OAC5Cb,QAAQC,IAAI,UAAUY,GACfO,IAAP,IAE2BV,KAAKC,MAAkBD,KAAKE,KACpCM,EAASC,EAASN,K,+BAgC9BQ,EAAQH,EAAOC,GAKtB,OAJAE,EAAM,iBAAaA,GACnBH,EAAQA,EAAM,SAAD,OAAWA,GAAQ,GAChCC,EAAOA,EAAM,WAAD,OAAYA,EAAZ,KAAqB,GAE1BC,IAAP,IAE2BV,KAAKC,MAAkBD,KAAKE,KACrCS,EAUMH,EAASC,K,kCAwBvBG,EAAQC,EAAMR,EAAaD,GAKrC,GAHAS,EAAQA,GAAc,+DACtBT,EAAWA,GAAkBJ,KAAKI,SAClCC,EAAeA,GAA4BL,KAAKK,aAMhD,OAAOK,IAAP,IAGqCL,EAA0BQ,EAAiBD,EAAuBR,EAZ9F,cAKPU,MAAM,wC,sBDpGCC,EAAY,SAAC9B,GACtB,IAAI+B,EEAc,SAAC/B,GACnB,GAAIA,EAAJ,CACA,IACIgC,EADYC,IAASC,IAAIC,QAAQnC,EAAKgC,MAAMhC,EAAKoC,KAC/BC,SAASJ,IAASK,IAAIC,MAEtCC,EAAW,IAAIC,IAAS,CAC1BC,IAAK,iCACLC,QAAS,CACLC,cAAc,UAAD,OAAYZ,MASjC,MAAM,CACFpB,OAPY,IAAIiC,IAAa,CAC7BC,KAAON,EACPO,MAAO,IAAIC,MAKJnC,MAFG,IAAIoC,EAAMjD,KFhBff,CAAOe,GAChBY,EAASmB,EAAGnB,OACZC,EAAQkB,EAAGlB,OAEFV,EAAY,WAAgB,IAAfH,EAAc,uDAAP,GAC7B,OAAO,SAACkD,GACJ,IAAIrD,EAAOG,EAAKH,MAAQ,OACpB0B,EAAQvB,EAAKuB,OAAS,GACtBC,EAAQxB,EAAKwB,MACjBZ,EAAOuC,MAAM,CAACA,MAAMtC,EAAMuC,UAAUvD,EAAK0B,EAAMC,KAAS6B,MAAK,SAAAC,GAGzDJ,EAAS,CAACrD,KAAKC,EAAkBE,KAAMsD,EAAItD,KAAKuD,WAAWnD,cAK1DX,EAAW,WAAgB,IAAfO,EAAc,uDAAP,GAC5B,OAAO,SAACkD,GACJ,IAAIxB,EAAS1B,EAAK0B,QAAU,EACxBH,EAAQvB,EAAKuB,OAAS,GACtBC,EAAQxB,EAAKwB,MACjBZ,EAAOuC,MAAM,CAACA,MAAMtC,EAAM2C,SAAS9B,EAAOH,EAAMC,KAAS6B,MAAK,SAAAC,GAC1D,IAAIvD,EAAQuD,EAAItD,KAAKuD,WAAWxD,MAChCmD,EAAS,CAACrD,KAAKC,EAAiBE,KAAKD,SAKpC0D,EAAc,WAAgB,IAAdzD,EAAa,uDAAN,GAChC,OAAO,SAACkD,GACJ7C,QAAQC,IAAI,qCAAYN,GACxB,IAAI2B,EAAU3B,EAAK2B,QACfC,EAAS5B,EAAK4B,MAClBhB,EAAO8C,OAAO,CACVC,SAAW9C,EAAM4C,YAAY9B,EAAQC,KACtCyB,MAAK,SAAAC,GACJjD,QAAQC,IAAI,uCAAUgD,QAWrBM,EAAW,SAAC/D,EAAKgE,EAAMC,GAChC,OAAO,SAACZ,GACJA,EAAS,CAACrD,KAAMC,MGpDXK,EAAY8C,EAEZQ,EAAcR,EACdxD,EAAWwD,ECGlBc,E,YACJ,WAAYC,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IAAIC,EAASD,EAAME,MAAMD,OACrBvC,EAASuC,EAAOvC,OAASuC,EAAOvC,OAAS,EAJ5B,OAKjB,EAAKhC,MAAQ,CAAEyE,IAAK,UAAWzC,UALd,E,iFAQjB,IAAIjC,EAAWsB,KAAKiD,MAAMvE,SACtBiC,EAASX,KAAKrB,MAAMgC,OACxBrB,QAAQC,IAAI,yBAAWoB,GACvBjC,EAAS,CAAEiC,a,oCAGXX,KAAKqD,SAAS,CACZD,IAAK,sB,+BAIC,IACJE,EADG,OAEP,GAAItD,KAAKiD,MAAMtE,MAAMD,SAASM,MAAO,CACnC,IAAIA,EAAQgB,KAAKiD,MAAMtE,MAAMD,SAASM,MACtCsE,EACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,gBACd,kBAACD,EAAA,EAAKE,OAAN,KAAczE,EAAM6B,OACpB,kBAAC0C,EAAA,EAAKG,MAAN,KAAa1E,EAAM2E,WACnB,kBAACJ,EAAA,EAAKK,KAAN,CAAWC,wBAAyB,CAAEC,OAAQ9E,EAAM+E,kBAIxDT,EAAY,kBAACC,EAAA,EAAD,qBAEd,OACE,kBAACS,EAAA,EAAD,CAAWR,UAAU,iBACnB,kBAACD,EAAA,EAAD,KAAOD,GACP,kBAACC,EAAA,EAAD,6CACA,kBAACU,EAAA,EAAD,CAAQC,QAAS,SAAAC,GAAC,OAAI,EAAKC,YAAYD,KAAvC,iB,GAtCWE,aA2DJC,eAdS,SAAA3F,GAEtB,OADAW,QAAQC,IAAI,qBAAYZ,GACjB,CACLA,YAIuB,SAACwD,EAAUoC,GACpC,MAAO,CACL7F,SADK,SACIO,GACPkD,EAASzD,EAASO,QAITqF,CAGbtB,G,kBChCawB,G,mBAnCX,WAAYvB,GAAQ,IAAD,8BACf,4CAAMA,KAYVwB,QAAU,SAACN,GAGP,EAAKlB,MAAMyB,QAAQC,KAAK,MAhBT,EAkBnBC,cAAgB,SAACT,GAEb,EAAKlB,MAAMyB,QAAQC,KAAK,cAlBxB,EAAKhG,MAAQ,CACTkC,MAAO,OACPgE,KAAM,iFACNC,QAAS,OACTC,OAAQ,IAEZzF,QAAQC,IAAI,SAAS0D,EAAM+B,OAAOC,SAASC,MAR5B,E,mHAsBT,IAAD,OACL,OACQ,kBAAC3B,EAAA,EAAD,CAAMC,UAAU,UACb,kBAAC2B,EAAA,EAAD,KACC,kBAAClB,EAAA,EAAD,CAAQC,QAAS,SAAAC,GAAC,OAAE,EAAKM,QAAQN,KAAjC,gBACA,kBAACF,EAAA,EAAD,CAAQC,QAAS,SAAAC,GAAC,OAAE,EAAKS,cAAcT,KAAvC,gBACA,kBAACF,EAAA,EAAD,2B,GA7BDI,cCgBbe,G,YACJ,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KA+CRoC,gBAAkB,SAACC,GAEjB,IAAIC,EAAM,6DAA+DD,EACzEN,OAAOQ,KAAKD,IAjDZ,EAAK5G,MAAQ,CACXkC,MAAO,eACPgE,KAAM,+DACNC,QAAS,OACTC,OAAQ,IANO,E,kFAajB3F,EAFoBY,KAAKiD,MAAnB7D,aAeNY,KAAKqD,SAAS,CAAEoC,YAZI,CAClBC,SAAU,QACVC,OAAQ,OACRC,MAAO,QACPC,OAAQ,QACRC,MAAO,OACPC,SAAU,QACVC,OAAQ,YACRC,aAAc,MACdC,WAAY,OACZC,UAAW,c,oCAKbrF,MAAM,U,+BAECqD,EAAGiC,GAAQ,IACZhH,EAAcY,KAAKiD,MAAnB7D,UACFH,EAAO,CACXA,KAAY,YACZA,EAAKwB,MAAQ2F,EAEbhH,EAAUH,K,gCAEFkF,EAAGiC,IAIXhH,EAHoBY,KAAKiD,MAAnB7D,WAGI,CAAEqB,MAFA2F,M,kCAIFjC,M,+BAQF,IACJkC,EADG,OAEHC,EAAa,GACfC,EAAY,GACZC,EAAiB,GACnB,GAAIxG,KAAKiD,MAAMtE,MAAMS,UAAUC,OAAQ,CACrC,IAAIA,EAASW,KAAKiD,MAAMtE,MAAMS,UAAUC,OACpCoH,EAAQpH,EAAOoH,MACfC,EAAWrH,EAAOqH,SAClBC,EAAatH,EAAOsH,WACxBN,EAAaI,EAAMG,KAAI,SAACC,EAAMvB,GAC5B,IAAIwB,EAAO,IAAIC,KAAKF,EAAKG,KAAKrD,WAC9B,OACE,kBAACJ,EAAA,EAAD,CAAMlC,IAAMiE,EAAQ9B,UAAU,cAC5B,kBAACD,EAAA,EAAKE,OAAN,CAAaS,QAAS,SAAAC,GAAC,OAAE,EAAKkB,gBAAgBwB,EAAKG,KAAKrG,UAAUkG,EAAKG,KAAKnG,OAC5E,kBAAC0C,EAAA,EAAKG,MAAN,KAAaoD,EAAKG,kBAClB,kBAAC1D,EAAA,EAAKK,KAAN,CACEC,wBAAyB,CAAEC,OAAQ+C,EAAKG,KAAKjD,YAE/C,kBAACR,EAAA,EAAK2D,OAAN,KACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUlD,QAAS,SAAAC,GAAC,OAAE,EAAKkB,gBAAgBwB,EAAKG,KAAKrG,UAC9D,6BACE0G,MAAM,QACNC,eAAa,sEACbC,MAAM,cAHR,gBAODV,EAAKG,KAAKQ,UAAUb,YAGzB,kBAACQ,EAAA,EAAD,CAAOC,QAAQ,QAAQlD,QAAS,SAAAC,GAAC,OAAE,EAAKkB,gBAAgBwB,EAAKG,KAAKrG,UAChE,6BACE4G,MAAM,UACNF,MAAM,iBACNC,eAAa,wEAHf,gBAOCT,EAAKG,KAAKS,SAASd,iBAM1BD,EAASgB,kBACXnB,EACE,kBAACtC,EAAA,EAAD,CAAQC,QAAS,SAAAC,GAAC,OAAI,EAAKwD,SAASxD,EAAGuC,EAASkB,eAAhD,uBAKAlB,EAASmB,cACXvB,EACE,kBAACrC,EAAA,EAAD,CAAQC,QAAS,SAAAC,GAAC,OAAI,EAAK2D,UAAU3D,EAAGuC,EAASqB,aAAjD,uBAKJvB,EAAiB,6BAAMG,QAEvBN,EAAa,kBAAC9C,EAAA,EAAD,2BAEf,OACE,kBAACS,EAAA,EAAD,CAAWR,UAAU,YACnB,kBAAC,EAASxD,KAAKiD,OACf,kBAACM,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKK,KAAN,KAAYyC,GACZ,kBAAClB,EAAA,EAAD,KACGoB,EACAD,GAEH,kBAAC/C,EAAA,EAAK2D,OAAN,KAAcV,S,GA9HLnC,aAuJJC,gBAdS,SAAA3F,GAEtB,OADAW,QAAQC,IAAI,qBAAYZ,GACjB,CACLA,YAIuB,SAACwD,EAAUoC,GACpC,MAAO,CACLnF,UADK,SACKH,GACRkD,EAAS/C,EAAUH,QAIVqF,CAGbc,I,oBChJI4C,G,KAAeC,EAAMC,SApBT,CAChBC,SAAU,CACRC,MAAO,CACL,CACEC,OAAQ,QACRvJ,KAAM,YACNsJ,MAAO,CACL,CACEC,OAAQ,OACRC,OAAQ,CACN,CACEC,KAAM,0CAUhBC,G,YACJ,WAAYvF,GAAO,IAAD,uBAChB,4CAAMA,KA2CRwF,QAAU,SAAAC,GACR,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACH,MAAO,YACT,IAAK,IACH,MAAO,cACT,IAAK,IACH,MAAO,cACT,IAAK,KACH,MAAO,cACT,IAAK,MACH,MAAO,gBACT,IAAK,OACH,MAAO,eACT,IAAK,QACH,MAAO,eACT,IAAK,SACH,MAAO,cACT,QACE,OAAO,OAjEK,EAoElBC,cAAgB,SAACxE,GACf,IAAItD,EAAQsD,EAAEyE,OAAOxC,MACjBvF,IAAU,EAAKlC,MAAMkC,OACvBgI,aAAaC,QAAQ,QAASjI,GAEhC,EAAKwC,SAAS,CACZxC,WA1Ec,EA6ElBkI,cAAgB,YAAa,IAAX3C,EAAU,EAAVA,MAEhB,GAAIA,EAAM+B,WAAa,EAAKxJ,MAAMyH,MAAM+B,SAAU,CAChD,IAAMvH,EAAUoI,KAAKC,UAAU7C,EAAM8C,UACrCL,aAAaC,QAAQ,UAAWlI,GAGlC,EAAKyC,SAAS,CAAC+C,WApFC,EAuFlB+C,kBAAoB,WAAK,IACfzG,EAAgB,EAAKO,MAArBP,YAEF9B,EAAUoI,KAAKC,UAAU,EAAKtK,MAAMyH,MAAM+B,UAQhDzF,EAFW,CAAC9B,QALEoI,KAAKI,MAAMxI,GAENwH,MAAMxB,KAAI,SAACyC,EAAK/D,GAAN,OAAc+D,EAAKjB,MAAM,GAAGG,QACtCe,KAAK,UAEEzI,MADd,EAAKlC,MAAMkC,QAIvBgI,aAAaU,WAAW,SACxBV,aAAaU,WAAW,WACxB,EAAKtG,MAAMyB,QAAQC,KAAK,MArGR,EAuJlB6E,YAAc,SAACvG,EAAOwG,EAAQC,GAAU,IAC9BC,EAA+B1G,EAA/B0G,WAAYC,EAAmB3G,EAAnB2G,SAEpB,OAFuC3G,EAAT+D,KAEjBlI,MACX,IAAK,cACH,OAAO,+BAAgB6K,EAAaC,GACtC,IAAK,gBACH,OAAO,uBAAQD,EAAaC,GAC9B,IAAK,cACH,OAAO,uBAAQD,EAAaC,GAC9B,IAAK,cACH,OAAO,uBAAQD,EAAaC,GAC9B,IAAK,gBACH,OAAO,uBAAQD,EAAaC,GAC9B,IAAK,eACH,OAAO,uBAAQD,EAAaC,GAC9B,IAAK,eACH,OAAO,uBAAQD,EAAaC,GAC9B,IAAK,cACH,OAAO,uBAAQD,EAAaC,GAC9B,IAAK,YACH,OAAO,uBAAQD,EAAaC,GAC9B,QACE,OAAOF,MA9KK,EA0LlBG,UAAY,SAACC,EAAOL,EAAQC,GAC1B,OAAQI,EAAMzI,KACZ,IAAK,IACH,OAAO,EAAK0I,QAAQD,EAAOL,EAAQC,GACrC,IAAK,YACH,OAAO,EAAKM,YAAYF,EAAOL,EAAQC,GACzC,IAAK,QACH,OAAO,EAAKO,QAAQH,EAAOL,EAAQC,GACrC,QACE,OAAOA,MAnMK,EAgNlBK,QAAU,SAACD,EAAOL,EAAQC,GAAU,IAC1BtD,EAAUqD,EAAVrD,MACA8D,EAAc9D,EAAd8D,UACR,GAAIA,EAAUC,WAAY,OAAOT,IAHA,IAKzBU,EAAehE,EAAfgE,WACAtH,EAAUoH,EAAVpH,MACF4F,EAAQ0B,EAAW7B,KAAK8B,MAAM,EAAGvH,EAAMwH,QAAQC,QAAQ,OAAQ,IAC/DzL,EAAO,EAAK2J,QAAQC,GAC1B,OAAK5J,EACQ,cAATA,GAA4C,cAApBsL,EAAWtL,KAA6B4K,KACpEI,EAAMU,iBAENf,EAAOgB,UAAU3L,GAEJ,cAATA,GACF2K,EAAOiB,UAAU,sBAGnBjB,EAAOkB,uBAAuBP,GAAYQ,UAVxBlB,KAzNF,EA+OlBM,YAAc,SAACF,EAAOL,EAAQC,GAAU,IAC9BtD,EAAUqD,EAAVrD,MACA8D,EAAc9D,EAAd8D,UACR,GAAIA,EAAUC,WAAY,OAAOT,IACjC,GAA+B,IAA3BQ,EAAUpH,MAAMwH,OAAc,OAAOZ,IAJJ,IAM7BU,EAAehE,EAAfgE,WACR,GAAwB,cAApBA,EAAWtL,KAAsB,OAAO4K,IAE5CI,EAAMU,iBACNf,EAAOgB,UAAU,aAEO,cAApBL,EAAWtL,MACb2K,EAAOoB,YAAY,kBA5PL,EAyQlBZ,QAAU,SAACH,EAAOL,EAAQC,GAAU,IAC1BtD,EAAUqD,EAAVrD,MACA8D,EAAc9D,EAAd8D,UACApH,EAA2BoH,EAA3BpH,MAAOC,EAAoBmH,EAApBnH,IACf,GADmCmH,EAAfC,WACJ,OAAOT,IAJU,IAMzBU,EAAehE,EAAfgE,WACR,OAAqB,IAAjBtH,EAAMwH,QAA2C,IAA3BF,EAAW7B,KAAKuC,OACjC,EAAKd,YAAYF,EAAOL,EAAQC,GACrC3G,EAAIuH,SAAWF,EAAW7B,KAAKuC,OAAepB,IAG5B,gBAApBU,EAAWtL,MACS,gBAApBsL,EAAWtL,MACS,kBAApBsL,EAAWtL,MACS,iBAApBsL,EAAWtL,MACS,iBAApBsL,EAAWtL,MACS,gBAApBsL,EAAWtL,MACS,gBAApBsL,EAAWtL,KAEJ4K,KAGTI,EAAMU,sBACNf,EAAOsB,aAAaN,UAAU,eA9R9B,IAAIvH,EAASD,EAAME,MAAMD,OACrBvC,EAASuC,EAAOvC,OAAOuC,EAAOvC,OAAO,MAKrCqK,EAAM,IAAIjE,KAEVkE,EAAUC,KAAKC,OAAOH,EAAM,eAAP,OAA+C,EACpEI,EAAMJ,EAAIK,SACVxK,EAAK,kCAAUoK,EAAV,YAHM,CAAC,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,sBAGbG,IAbvB,OAehB,EAAKzM,MAAQ,CACXyE,IAAI,UACJzC,SAAOE,QACPuF,MAAM4B,GACNsD,UAAU,IAAIvE,MAAOE,iBACrBsE,WAAW,CACTC,MAAO,UACPzF,SAAU,KAtBE,E,iFA2BhB,IAAIrH,EAAWsB,KAAKiD,MAAMvE,SACtBiC,EAASX,KAAKrB,MAAMgC,OACxB,GAAc,QAAXA,EAAiB,CAClB,IAAIE,EAAQgI,aAAa4C,QAAQ,SAC7B7K,EAAUiI,aAAa4C,QAAQ,UAChC5K,GACDb,KAAKqD,SAAS,CAACxC,UAEdD,GACDZ,KAAKqD,SAAS,CAACzC,iBAGjBlC,EAAS,CAACiC,WAEZrB,QAAQC,IAAI,yBAAUoB,K,+BA8Dd,IAAD,OACH+K,EAAe,kBAACzH,EAAA,EAAD,CAAQC,QAAW,SAACC,GAAD,OAAK,EAAKgF,kBAAkBhF,KAA/C,gBACnB,GAAGnE,KAAKiD,MAAMtE,MAAMD,SAASM,MACfgB,KAAKiD,MAAMtE,MAAMD,SAASM,MAGxC,OACI,kBAACgF,EAAA,EAAD,CAAWR,UAAU,iBACrB,kBAAC,EAASxD,KAAKiD,OACb,kBAACM,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAMC,UAAU,gBACd,kBAACD,EAAA,EAAKE,OAAN,KAAa,kBAACkI,GAAA,EAAKC,QAAN,CAAc9M,KAAK,OAAO+M,SAAY,SAAC1H,GAAD,OAAK,EAAKwE,cAAcxE,IAAI2H,YAAY,eAAKC,aAAc/L,KAAKrB,MAAMkC,SACzH,kBAAC0C,EAAA,EAAKG,MAAN,CAAYsI,MAAOhM,KAAKrB,MAAM4M,YAAavL,KAAKrB,MAAM2M,UACtD,kBAAC/H,EAAA,EAAKK,KAAN,KACE,kBAAC,KAAD,CACEkI,YAAc,MACd1F,MAASpG,KAAKrB,MAAMyH,MACpByF,SAAY7L,KAAK+I,iBAUrB,kBAACxF,EAAA,EAAK2D,OAAN,KACE,kBAAC3D,EAAA,EAAD,KACE,kBAAC4B,EAAA,EAAD,KACGuG,Y,GAtIFrH,aAwTJC,gBAjBS,SAAC3F,GAEvB,OADAW,QAAQC,IAAI,qBAAWZ,GAChB,CACHA,YAIqB,SAACwD,EAAUoC,GACtC,MAAO,CACL7F,SADK,SACIO,GACPkD,EAASzD,EAASO,KAEpByD,YAJK,SAIOzD,GACVkD,EAASO,EAAYzD,QAIVqF,CAA6CkE,ICnUtDtK,I,OAAS,CACbmD,IANU,WAOVJ,MANY,2FAOZhB,MANY,aAOZC,KANW,uBAOXC,OANa,aAgDA8L,G,YAtCb,WAAYhJ,GAAO,IAAD,6BAChB,4CAAMA,IAENlC,EAAU7C,IAHM,E,mHAShB,OACO,kBAAC,IAAD,CAAUsB,MAASA,GACnB,kBAAC,IAAD,KACG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO0M,KAAK,IAAIC,OAAK,EAACC,UAAWhH,KACjC,kBAAC,IAAD,CAAO8G,KAAK,gBAAgBE,UAAWpJ,IACvC,kBAAC,IAAD,CAAOkJ,KAAK,gBAAgBE,UAAW5D,KACvC,kBAAC,IAAD,CAAU6D,GAAG,a,GAjBbhI,aCfEiI,QACW,cAA7BtH,OAAOC,SAASsH,UAEe,UAA7BvH,OAAOC,SAASsH,UAEhBvH,OAAOC,SAASsH,SAASpJ,MACvB,2DCVNqJ,IAASC,OAAO,kBAAC,GAAD,MAAStE,SAASuE,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvK,MAAK,SAAAwK,GACjCA,EAAaC,kB","file":"static/js/main.c0618ce9.chunk.js","sourcesContent":["export default {\r\n    config:{},\r\n    pageTitle:\"首页\",\r\n    user:[]\r\n }","export const SET_CONFIG = Symbol('SET_CONFIG')\r\nexport const GET_STATE = Symbol('GET_STATE')\r\nexport const SET_ISSUE = Symbol('SET_ISSUE')\r\nexport const SET_ISSUES = Symbol('SET_ISSUES')\r\nexport const SET_CLIENT = Symbol('SET_CLIENT')\r\nexport const SET_REPOS = Symbol('SET_REPOS')\r\n","import {combineReducers} from 'redux'\r\nimport { setIssue,setIssues } from \"./ReposReducers\"\r\n\r\nexport default combineReducers({\r\n    setIssue,setIssues\r\n})","// 它就是将来真正要用到的数据，我们将其统一放置在reducers.js文件\r\nimport defaultState from '../state.js'\r\nimport * as Types from '../../actions/ReposActionsType'\r\nfunction setIssue(state = defaultState.config,action){\r\n    switch(action.type){\r\n        case Types.SET_ISSUE:\r\n        state.issue = action.data\r\n        //console.log(\"得到\",state,\"data\",action,action.type)\r\n        //return state\r\n        return Object.assign({},state) //直接返回state是不会自动的刷新的\r\n        default:\r\n        return state\r\n    }\r\n}\r\nfunction setIssues(state = defaultState.config,action){\r\n    switch(action.type){\r\n        case Types.SET_ISSUES:\r\n        state.issues = action.data\r\n        console.log(\"得到\",state,\"data\",action,action.type)\r\n        //return state\r\n        return Object.assign({},state)\r\n        default:\r\n        return state\r\n    }\r\n}\r\nfunction setConfig (state = defaultState.config,action){\r\n    switch(action.type){\r\n        case Types.SET_CONFIG:\r\n        state.config = action.data\r\n        //console.log(\"进入\",state,\"data\",action,action.type)\r\n        return state\r\n        case Types.SET_CLIENT:\r\n        state.client = action.data\r\n        //console.log(\"进入\",state,\"data\",action,action.type)\r\n        return state\r\n        default:\r\n        //console.log(\"得到\",state,\"data\",action,action.type)\r\n        return state\r\n    }\r\n}\r\nfunction pageTitle (state = defaultState.pageTitle,action) {\r\n// 不同的action有不同的处理逻辑\r\n    switch (action.type) {\r\n        case 'SET_PAGE_TITLE':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nfunction user (state = defaultState.user, action){\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport {\r\n    setIssue,\r\n    setIssues,\r\n    setConfig,\r\n    pageTitle,\r\n    user\r\n}","// index.js\r\n// applyMiddleware: redux通过该函数来使用中间件\r\n// createStore: 用于创建store实例\r\nimport { applyMiddleware, createStore } from 'redux'\r\n\r\n// 中间件，作用：如果不使用该中间件，当我们dispatch一个action时，需要给dispatch函数传入action    \r\n// 对象；但如果我们使用了这个中间件，那么就可以传入一个函数，\r\n// 这个函数接收两个参数:dispatch和    getState。这个dispatch可以在将来的异步请求完成后使用，对于异步action很有用\r\nimport thunk from 'redux-thunk'\r\n\r\n// 引入reducer\r\nimport reducers from './reducers/index'\r\n\r\n// 创建store实例\r\nlet store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunk)\r\n)\r\n//console.log(\"引入了store\",reducers)\r\nexport default store","import * as Types from \"./ReposActionsType\"\r\nimport {config} from \"./Config\"\r\nvar client \r\nvar repos \r\nexport const setConfig = (data)=>{\r\n    let cf = config(data)\r\n    client = cf.client\r\n    repos = cf.repos\r\n}\r\nexport const setIssues = (data = {}) => {\r\n    return (dispatch)=>{\r\n        let type = data.type || \"next\"\r\n        let first = data.first || 10\r\n        let after = data.after\r\n        client.query({query:repos.getIssues(type,first,after)}).then(res=>{\r\n            //console.log(\"issues获取的内容\",res)\r\n            //let issues = res.data.repository.issues\r\n            dispatch({type:Types.SET_ISSUES, data: res.data.repository.issues})\r\n        }) \r\n    }\r\n}\r\n// 设置post内容\r\nexport const setIssue = (data = {}) => {\r\n    return (dispatch)=>{\r\n        let number = data.number || 6\r\n        let first = data.first || 10\r\n        let after = data.after\r\n        client.query({query:repos.getIssue(number,first,after)}).then(res=>{\r\n            let issue = res.data.repository.issue\r\n            dispatch({type:Types.SET_ISSUE, data:issue})\r\n        }) \r\n    }\r\n}\r\n// 设置post内容之增加post\r\nexport const setIssueAdd = ( data = {})=> {\r\n    return (dispatch)=>{\r\n        console.log(\"增加的数据data\",data)\r\n        let content = data.content\r\n        let title  = data.title\r\n        client.mutate({\r\n            mutation : repos.setIssueAdd(content,title)\r\n        }).then(res=>{\r\n            console.log(\"增加后的数据\", res)\r\n\r\n        })\r\n        // client.query({query:repos.getIssue(number,first,after)}).then(res=>{\r\n        //     console.log(res)\r\n        //     //let issue = res.data.repository.issue\r\n        //     //dispatch({type:Types.SET_ISSUE, data:issue})\r\n        // }) \r\n    }\r\n}\r\n// 异步获取内容\r\nexport const setRepos = (type,start,end) => {\r\n    return (dispatch)=>{\r\n        dispatch({type: Types.SET_REPOS})\r\n    }\r\n  };\r\n","import gql from 'graphql-tag'\r\nclass Repository {\r\n  constructor(config) {\r\n    this.owner = config.owner\r\n    this.name = config.name\r\n    this.labels = config.labels ? `,labels:\"${config.labels}\"` : \"\"\r\n    this.labelIds = config.labelIds ? config.labelIds : \"MDU6TGFiZWwxMzU2ODYzMTMz\"\r\n    this.repositoryId = config.repositoryId ? config.repositoryId : \"MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=\"\r\n    this.graphql = \"\"\r\n    this.currentPage = \"first:10\"\r\n  }\r\n  getIssues(type, first, after, labels) {\r\n    if(type === \"next\"){\r\n      first = first? `first:${first}`:\"\"\r\n      after =after?`,after:\"${after}\"`:\"\"\r\n    }else{\r\n      first = first? `last:${first}`:\"\"\r\n      after =after?`,before:\"${after}\"`:\"\"\r\n    }\r\n    labels = labels?`,labels:\"${labels}\"`: this.labels\r\n    console.log(\"gql set\",labels)\r\n    return gql `\r\n        {\r\n          repository(owner: \"${this.owner}\", name: \"${this.name}\") {\r\n              issues(${first} ${after} ${labels},orderBy:{field:CREATED_AT,direction:DESC}){\r\n                totalCount\r\n                pageInfo {\r\n                  endCursor\r\n                  startCursor\r\n                  hasNextPage\r\n                  hasPreviousPage\r\n                } \r\n                edges {\r\n                  node {\r\n                    id\r\n                    number\r\n                    title\r\n                    bodyHTML\r\n                    body\r\n                    author{\r\n                        login\r\n                    }\r\n                    createdAt\r\n                    comments {\r\n                     totalCount\r\n                    }\r\n                    reactions(content:HEART){\r\n                      totalCount\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n          }\r\n        }\r\n        `\r\n  }\r\n  getIssue(number, first, after) {\r\n    number = `number:${number}`\r\n    first = first? `first:${first}`:\"\"\r\n    after =after?`,after:\"${after}\"`:\"\"\r\n    //,orderBy:{field:CREATED_AT,direction:DESC}\r\n    return gql `\r\n        {\r\n          repository(owner: \"${this.owner}\", name: \"${this.name}\") {\r\n              issue(${number}){\r\n                id\r\n                number\r\n                title\r\n                bodyHTML\r\n                body\r\n                author{\r\n                  login\r\n                }\r\n                createdAt\r\n                comments( ${first} ${after}) {\r\n                  totalCount\r\n                  edges{\r\n                    node{\r\n                      bodyHTML\r\n                      author{\r\n                        login\r\n                      }\r\n                      reactions(content:HEART){\r\n                        totalCount\r\n                      }\r\n                      createdAt\r\n                    }\r\n                    cursor\r\n                  }\r\n                }\r\n                reactions(content:HEART){\r\n                  totalCount\r\n                }\r\n              }\r\n          }\r\n        }\r\n        `\r\n  }\r\n  setIssueAdd(content,title,repositoryId,labelIds){\r\n    let first =`first: 100` //第一次更新是没有first的\r\n    title = title?title : \"没有标题真是太奇怪了\" \r\n    labelIds = labelIds?labelIds:this.labelIds\r\n    repositoryId = repositoryId? repositoryId: this.repositoryId\r\n    if(!repositoryId){\r\n      alert('需要仓库的ID')\r\n      return\r\n    }\r\n    //console.log(title,labelIds,repositoryId,content)\r\n    return gql `\r\n    mutation CreateIssuePayload\r\n    {\r\n      createIssue(input:{repositoryId:\"${repositoryId}\", title: \"${title}\",body:\" ${content}\",labelIds: \"${labelIds}\"}) {\r\n          issue{\r\n            id\r\n            number\r\n            title\r\n            bodyHTML\r\n            body\r\n            author{\r\n              login\r\n            }\r\n            createdAt\r\n            comments( ${first}) {\r\n              totalCount\r\n              edges{\r\n                node{\r\n                  bodyHTML\r\n                  author{\r\n                    login\r\n                  }\r\n                  reactions(content:HEART){\r\n                    totalCount\r\n                  }\r\n                  createdAt\r\n                }\r\n                cursor\r\n              }\r\n            }\r\n            reactions(content:HEART){\r\n              totalCount\r\n            }\r\n          }\r\n      }\r\n    }\r\n    `\r\n  }\r\n}\r\nexport default Repository;","import {ApolloClient}from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport Repos from \"../graphql/repository\"\r\nimport CryptoJS from 'crypto-js'\r\nexport const config = (data)=>{\r\n    if(!data)return\r\n    var decrypted = CryptoJS.AES.decrypt(data.token,data.key);\r\n    let token = decrypted.toString(CryptoJS.enc.Utf8);//转化为utf8\r\n    //console.log(token)\r\n    const httpLink = new HttpLink({\r\n        uri: 'https://api.github.com/graphql', // 配置请求url \r\n        headers: { // 配置header\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n    const client =  new ApolloClient({\r\n        link:  httpLink,\r\n        cache: new InMemoryCache() // 缓存\r\n    })  \r\n    // 增加配置\r\n    const repos = new Repos(data)\r\n    return{\r\n        client,repos\r\n    }\r\n}\r\n","import * as Repos from \"./ReposActions\";\r\nlet Actions = Repos\r\n// Repos\r\nexport const setIssues = Repos.setIssues;\r\n// issue\r\nexport const setIssueAdd = Repos.setIssueAdd;\r\nexport const setIssue = Repos.setIssue;\r\n// All\r\nexport default Actions","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Button\r\n  // Form, ButtonGroup\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIssue } from \"../actions\";\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props)\r\n    let params = props.match.params;\r\n    let number = params.number ? params.number : 6;\r\n    this.state = { msg: \"msg hhh\", number };\r\n  }\r\n  componentDidMount() {\r\n    let setIssue = this.props.setIssue;\r\n    let number = this.state.number;\r\n    console.log(\"Post初始化\", number);\r\n    setIssue({ number }); // number first after 后面两个是评论的\r\n  }\r\n  handleClick() {\r\n    this.setState({\r\n      msg: \"msg修改\"\r\n    });\r\n    //console.log(this)\r\n  }\r\n  render() {\r\n    let CardIssue;\r\n    if (this.props.state.setIssue.issue) {\r\n      let issue = this.props.state.setIssue.issue;\r\n      CardIssue = (\r\n        <Card className=\"post-content\">\r\n          <Card.Header>{issue.title}</Card.Header>\r\n          <Card.Title>{issue.createdAt}</Card.Title>\r\n          <Card.Body dangerouslySetInnerHTML={{ __html: issue.bodyHTML }} />\r\n        </Card>\r\n      );\r\n    } else {\r\n      CardIssue = <Card>等等</Card>;\r\n    }\r\n    return (\r\n      <Container className=\"xx-space-post\">\r\n        <Card>{CardIssue}</Card>\r\n        <Card>放评论的地方</Card>\r\n        <Button onClick={e => this.handleClick(e)}>Evernote</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = state => {\r\n  console.log(\"state 映射\", state);\r\n  return {\r\n    state\r\n  };\r\n};\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIssue(data) {\r\n      dispatch(setIssue(data));\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Post);\r\n//export default Post;\r\n","import React, { Component } from 'react';\r\nimport { Container, Card, Button, CardColumns, ButtonGroup, Nav } from 'react-bootstrap';\r\nimport './head.scss'\r\nclass Head extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"head\",\r\n            desc: \"显示关于应用中的头部的信息\",\r\n            message: \"test\",\r\n            spaces: []\r\n        };\r\n        console.log(\"props:\",props,window.location.href)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    toIndex = (e)=>{\r\n        //console.log(e)\r\n        //console.log(\"props\",this.props,'state',this.state)\r\n        this.props.history.push(\"/\")\r\n    }\r\n    toAddNewSpace = (e)=>{\r\n        //console.log(\"添加新的内容\")\r\n        this.props.history.push(\"/edit/new\")\r\n    }\r\n    render() {\r\n        return (\r\n                <Card className=\"Header\">\r\n                   <ButtonGroup>\r\n                    <Button onClick={e=>this.toIndex(e)}>首页</Button>\r\n                    <Button onClick={e=>this.toAddNewSpace(e)}>新增</Button>\r\n                    <Button>登录</Button>\r\n                   </ButtonGroup>\r\n                </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Button,\r\n  // CardColumns,\r\n  Badge,\r\n  ButtonGroup\r\n} from \"react-bootstrap\";\r\nimport { setIssues } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n// import { ReactComponent as Logo } from '../logo.svg';\r\nimport { Link } from \"react-router-dom\";\r\nimport Head from \"../components/head/head\";\r\n\r\n// fetch('./setting.json').then(res=>{\r\n//   console.log(\"setting,\",res.text())\r\n// })\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"首页\",\r\n      desc: \"这里是显示内容的主页\",\r\n      message: \"test\",\r\n      spaces: []\r\n    };\r\n    //console.log(props)\r\n  }\r\n  componentDidMount() {\r\n    let { setIssues } = this.props;\r\n    // console.log(\"Home 初始化\")\r\n    setIssues();\r\n    const addNewStyle = {\r\n      position: \"fixed\",\r\n      bottom: \"40px\",\r\n      width: \"100px\",\r\n      height: \"100px\",\r\n      right: \"40px\",\r\n      fontSize: \"100px\",\r\n      border: \"5px solid\",\r\n      borderRadius: \"50%\",\r\n      lineHeight: \"65px\",\r\n      textAlign: \"center\"\r\n    };\r\n    this.setState({ addNewStyle });\r\n  }\r\n  handleClick() {\r\n    alert(\"home\");\r\n  }\r\n  preClick(e, value) {\r\n    let { setIssues } = this.props;\r\n    let data = {};\r\n    data.type = \"previous\";\r\n    data.after = value;\r\n    //console.log(\"设置上一页\",data)\r\n    setIssues(data);\r\n  }\r\n  nextClick(e, value) {\r\n    let { setIssues } = this.props;\r\n    let after = value;\r\n    //console.log(\"设置下一页\",after)\r\n    setIssues({ after });\r\n  }\r\n  addNewSpace(e) {\r\n    // location.href = 'edit/new';\r\n  }\r\n  toGithubComment = (index) =>{\r\n    // console.log(\"数字\",index)\r\n    let url = 'https://github.com/abearxiong/abearxiong.github.io/issues/' + index\r\n    window.open(url)\r\n  }\r\n  render() {\r\n    let CardIssues;\r\n    let ButtonNext = \"\",\r\n      ButtonPre = \"\",\r\n      CardTotalCount = \"\";\r\n    if (this.props.state.setIssues.issues) {\r\n      let issues = this.props.state.setIssues.issues;\r\n      let edges = issues.edges;\r\n      let pageInfo = issues.pageInfo;\r\n      let totalCount = issues.totalCount;\r\n      CardIssues = edges.map((list, index) => {\r\n        let date = new Date(list.node.createdAt);\r\n        return (\r\n          <Card key={ index } className=\"space-item\">\r\n            <Card.Header onClick={e=>this.toGithubComment(list.node.number)}>{list.node.title}</Card.Header>\r\n            <Card.Title>{date.toLocaleString()}</Card.Title>\r\n            <Card.Body\r\n              dangerouslySetInnerHTML={{ __html: list.node.bodyHTML }}\r\n            ></Card.Body>\r\n            <Card.Footer>\r\n              <Badge variant=\"success\" onClick={e=>this.toGithubComment(list.node.number)}>\r\n                    <g-emoji\r\n                      alias=\"heart\"\r\n                      fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\"\r\n                      class=\"emoji mr-1\"\r\n                    >\r\n                      ❤️\r\n                    </g-emoji>\r\n                  {list.node.reactions.totalCount}\r\n              </Badge>\r\n\r\n              <Badge variant=\"light\" onClick={e=>this.toGithubComment(list.node.number)}>\r\n                <g-emoji\r\n                  class=\"g-emoji\"\r\n                  alias=\"speech_balloon\"\r\n                  fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png\"\r\n                >\r\n                  💬\r\n                </g-emoji>\r\n                {list.node.comments.totalCount}\r\n              </Badge>\r\n            </Card.Footer>\r\n          </Card>\r\n        );\r\n      });\r\n      if (pageInfo.hasPreviousPage) {\r\n        ButtonPre = (\r\n          <Button onClick={e => this.preClick(e, pageInfo.startCursor)}>\r\n            上一页\r\n          </Button>\r\n        );\r\n      }\r\n      if (pageInfo.hasNextPage) {\r\n        ButtonNext = (\r\n          <Button onClick={e => this.nextClick(e, pageInfo.endCursor)}>\r\n            下一页\r\n          </Button>\r\n        );\r\n      }\r\n      CardTotalCount = <div>{totalCount}</div>;\r\n    } else {\r\n      CardIssues = <Card>请稍等</Card>;\r\n    }\r\n    return (\r\n      <Container className=\"xx-space\">\r\n        <Head {...this.props} />\r\n        <Card>\r\n          <Card.Body>{CardIssues}</Card.Body>\r\n          <ButtonGroup>\r\n            {ButtonPre}\r\n            {ButtonNext}\r\n          </ButtonGroup>\r\n          <Card.Footer>{CardTotalCount}</Card.Footer>\r\n        </Card>\r\n        {/* <Link style={this.state.addNewStyle} to={{ pathname: \"/edit/new\" }}>\r\n          +\r\n        </Link> */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = state => {\r\n  console.log(\"state 映射\", state);\r\n  return {\r\n    state\r\n  };\r\n};\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIssues(data) {\r\n      dispatch(setIssues(data));\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React, { Component } from 'react';\r\nimport {Container,Card,Button,Form, ButtonGroup} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setIssue,setIssueAdd } from '../actions';\r\nimport { Editor } from 'slate-react';\r\nimport { Value } from 'slate';\r\nimport Head from '../components/head/head'\r\n// import './edit.scss'\r\n\r\nlet initialJson = {\r\n  document: {\r\n    nodes: [\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                text: '真是开心啊',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n}\r\nconst initialValue = Value.fromJSON(initialJson)\r\nclass Edit extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    //console.log(props)\r\n    let params = props.match.params\r\n    let number = params.number?params.number:\"new\"\r\n    /* q = d - 1324 * 24 * 60 * 60  \r\n    *  1443365529298 是第一天\r\n    *  Sun Sep 27 2015 22:52:09 GMT+0800 (中国标准时间)\r\n    */\r\n    let now = new Date()\r\n    let show_day = [\"星期天\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]\r\n    let manyDay = Math.floor((now - 1443365529298)/(24 * 60 * 60 * 1000)) + 1// 往下 取整\r\n    let day = now.getDay()\r\n    let title = `传说之旅${manyDay} ${show_day[day]}`\r\n    //let content = \"今天发生了什么愉快的事情呢？\"\r\n    this.state = {\r\n      msg:\"msg hhh\",\r\n      number,title,\r\n      value:initialValue,\r\n      createAt: new Date().toLocaleString(),\r\n      titleStyle:{\r\n        color: '#cccccc',\r\n        fontSize: 10\r\n      }\r\n    }\r\n  }  \r\n  componentDidMount () {\r\n    let setIssue = this.props.setIssue\r\n    let number = this.state.number\r\n    if(number === \"new\"){\r\n      let title = localStorage.getItem('title')\r\n      let content = localStorage.getItem('conent')\r\n      if(title){\r\n        this.setState({title})\r\n      }\r\n      if(content){\r\n        this.setState({content})\r\n      }\r\n    }else{\r\n      setIssue({number}) // number first after 后面两个是评论的\r\n    }\r\n    console.log(\"Edit初始化\",number)\r\n    \r\n  }\r\n  getType = chars => {\r\n    switch (chars) {\r\n      case '*':\r\n      case '-':\r\n      case '+':\r\n        return 'list-item'\r\n      case '>':\r\n        return 'block-quote'\r\n      case '#':\r\n        return 'heading-one'\r\n      case '##':\r\n        return 'heading-two'\r\n      case '###':\r\n        return 'heading-three'\r\n      case '####':\r\n        return 'heading-four'\r\n      case '#####':\r\n        return 'heading-five'\r\n      case '######':\r\n        return 'heading-six'\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n  onChangeTitle = (e)=>{\r\n    let title = e.target.value\r\n    if (title !== this.state.title) {\r\n      localStorage.setItem('title', title)\r\n    }\r\n    this.setState({\r\n      title\r\n    })\r\n  }\r\n  onValueChange = ({value}) =>{\r\n    // Check to see if the document has changed before saving.\r\n    if (value.document !== this.state.value.document) {\r\n      const content = JSON.stringify(value.toJSON())\r\n      localStorage.setItem('content', content)\r\n      // console.log(content)\r\n    }\r\n    this.setState({value})\r\n    // console.log(this.state)\r\n  }\r\n  onClickAddNewPost = ()=>{\r\n    const { setIssueAdd } = this.props\r\n    // 1. 获取actions 2. 执行提交内容\r\n    const content = JSON.stringify(this.state.value.document)\r\n    const nodes = JSON.parse(content)\r\n    // console.log(content,nodes)\r\n    let values = nodes.nodes.map((item,index)=>item.nodes[0].text)\r\n    let value = values.join(\"\\\\r\\\\n\")\r\n    let title = this.state.title\r\n    let data = {content:value,title:title}\r\n    //console.log(value)\r\n    setIssueAdd(data)\r\n    localStorage.removeItem('title')\r\n    localStorage.removeItem('content')\r\n    this.props.history.push(\"/\")\r\n  }\r\n  render() {\r\n    let ButtonSubmit = <Button onClick = {(e)=>this.onClickAddNewPost(e)}>增加</Button>\r\n    if(this.props.state.setIssue.issue){\r\n      let issue = this.props.state.setIssue.issue\r\n      // 赋值给state\r\n    }\r\n    return (  \r\n        <Container className=\"xx-space-Edit\">\r\n        <Head {...this.props}/>\r\n          <Card>\r\n            <Card className=\"Edit-content\">\r\n              <Card.Header><Form.Control type=\"text\" onChange = {(e)=>this.onChangeTitle(e)} placeholder=\"标题\" defaultValue={this.state.title} /></Card.Header>\r\n              <Card.Title style={this.state.titleStyle}>{this.state.createAt}</Card.Title>\r\n              <Card.Body>\r\n                <Editor \r\n                  placeholder = \"hhh\"\r\n                  value = {this.state.value}\r\n                  onChange = {this.onValueChange}\r\n                  />\r\n                {/* <Editor\r\n                  placeholder = \"打算放预览的地方啦\"\r\n                  value = { this.state.value }\r\n                  onKeyDown={this.onKeyDown}\r\n                  renderBlock={this.renderBlock}\r\n                /> */}\r\n              </Card.Body> \r\n              {/* <MarkdownShortcuts/> */}\r\n              <Card.Footer>\r\n                <Card>\r\n                  <ButtonGroup>\r\n                    {ButtonSubmit}\r\n                  </ButtonGroup>\r\n                </Card>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Card>\r\n        </Container>\r\n    );\r\n  }\r\n    /**\r\n   * Render a Slate block.\r\n   *\r\n   * @param {Object} props\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   * @return {Element}\r\n   */\r\n\r\n  renderBlock = (props, editor, next) => {\r\n    const { attributes, children, node } = props\r\n\r\n    switch (node.type) {\r\n      case 'block-quote':\r\n        return <blockquote {...attributes}>{children}</blockquote>\r\n      case 'bulleted-list':\r\n        return <ul {...attributes}>{children}</ul>\r\n      case 'heading-one':\r\n        return <h1 {...attributes}>{children}</h1>\r\n      case 'heading-two':\r\n        return <h2 {...attributes}>{children}</h2>\r\n      case 'heading-three':\r\n        return <h3 {...attributes}>{children}</h3>\r\n      case 'heading-four':\r\n        return <h4 {...attributes}>{children}</h4>\r\n      case 'heading-five':\r\n        return <h5 {...attributes}>{children}</h5>\r\n      case 'heading-six':\r\n        return <h6 {...attributes}>{children}</h6>\r\n      case 'list-item':\r\n        return <li {...attributes}>{children}</li>\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On key down, check for our specific key shortcuts.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onKeyDown = (event, editor, next) => {\r\n    switch (event.key) {\r\n      case ' ':\r\n        return this.onSpace(event, editor, next)\r\n      case 'Backspace':\r\n        return this.onBackspace(event, editor, next)\r\n      case 'Enter':\r\n        return this.onEnter(event, editor, next)\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On space, if it was after an auto-markdown shortcut, convert the current\r\n   * node into the shortcut's corresponding type.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onSpace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    const { start } = selection\r\n    const chars = startBlock.text.slice(0, start.offset).replace(/\\s*/g, '')\r\n    const type = this.getType(chars)\r\n    if (!type) return next()\r\n    if (type === 'list-item' && startBlock.type === 'list-item') return next()\r\n    event.preventDefault()\r\n\r\n    editor.setBlocks(type)\r\n\r\n    if (type === 'list-item') {\r\n      editor.wrapBlock('bulleted-list')\r\n    }\r\n\r\n    editor.moveFocusToStartOfNode(startBlock).delete()\r\n  }\r\n\r\n  /**\r\n   * On backspace, if at the start of a non-paragraph, convert it back into a\r\n   * paragraph node.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onBackspace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n    if (selection.start.offset !== 0) return next()\r\n\r\n    const { startBlock } = value\r\n    if (startBlock.type === 'paragraph') return next()\r\n\r\n    event.preventDefault()\r\n    editor.setBlocks('paragraph')\r\n\r\n    if (startBlock.type === 'list-item') {\r\n      editor.unwrapBlock('bulleted-list')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On return, if at the end of a node type that should not be extended,\r\n   * create a new paragraph below it.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onEnter = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    const { start, end, isExpanded } = selection\r\n    if (isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    if (start.offset === 0 && startBlock.text.length === 0)\r\n      return this.onBackspace(event, editor, next)\r\n    if (end.offset !== startBlock.text.length) return next()\r\n\r\n    if (\r\n      startBlock.type !== 'heading-one' &&\r\n      startBlock.type !== 'heading-two' &&\r\n      startBlock.type !== 'heading-three' &&\r\n      startBlock.type !== 'heading-four' &&\r\n      startBlock.type !== 'heading-five' &&\r\n      startBlock.type !== 'heading-six' &&\r\n      startBlock.type !== 'block-quote'\r\n    ) {\r\n      return next()\r\n    }\r\n\r\n    event.preventDefault()\r\n    editor.splitBlock().setBlocks('paragraph')\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state 映射\",state)\r\n  return {\r\n      state\r\n  }\r\n}\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\nreturn {\r\n  setIssue(data){\r\n    dispatch(setIssue(data))\r\n  },\r\n  setIssueAdd(data){\r\n    dispatch(setIssueAdd(data))\r\n  }\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit)\r\n//export default Edit;\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { Route,HashRouter, Switch,Redirect } from 'react-router-dom';\nimport Post from './views/post';\nimport Home from './views/home';\nimport Edit from './views/edit';\n// import Head from './components/head/head'\nimport {setConfig} from './actions/ReposActions'\nimport './App.css';\n// 私有token上传会自动把token无效；所以加密一下啊 解密\n// import CryptoJS from 'crypto-js'\n// var decrypted = CryptoJS.AES.decrypt(token,key);\n// let token = decrypted.toString(CryptoJS.enc.Utf8);//转化为utf8\nconst key = \"xx-space\"\nconst token = 'U2FsdGVkX19B3HPXWKdG/BW8oy5ld+5t4WogKry+ve6B0RWRGtSjQlGr32zwr4nn7zBE9woFkj4mWNj8jZv1dg==' // 私有限制权限的token\nconst owner = 'abearxiong'  // 仓库拥有者\nconst name = 'abearxiong.github.io' // 仓库名字\nconst labels = 'xx-space' //'MDU6TGFiZWwxMzU2ODYzMTMz' // label的id\nconst config = {\n  key,\n  token,\n  owner,\n  name,\n  labels,\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    //store.dispatch({type: Types.SET_CONFIG,data: config})\n    setConfig(config);\n  };\n  componentDidMount () {\n    //console.log(\"App初始化完成\",store)\n  }\n  render() {\n    return (      \n           <Provider store = {store}>\n           <HashRouter>\n              <Switch>\n                  <Route path=\"/\" exact component={Home}/>\n                  <Route path=\"/post/:number\" component={Post}/>\n                  <Route path=\"/edit/:number\" component={Edit}/>\n                  <Redirect to=\"/\" />\n              </Switch>\n            </HashRouter>\n          </Provider>   \n    );\n  }\n}\n// // mapStateToProps：将state映射到组件的props中\n// const mapStateToProps = (state) => {\n//   return {\n//       user: state.user,\n//   }\n// }\n// // mapDispatchToProps：将dispatch映射到组件的props中\n// const mapDispatchToProps = (dispatch, ownProps) => {\n// return {\n//   setConfig (data) {\n//       dispatch(setConfig(data))\n//   }\n// }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport '@github/g-emoji-element'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}