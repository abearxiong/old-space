{"version":3,"sources":["actions/Types.js","store/reducers/index.js","store/reducers/ReposReducers.js","store/index.js","actions/ReposActions.js","actions/index.js","graphql/repository/issues/GET_ISSUE.js","graphql/repository/issues/GET_ISSUE_COMMENTS.js","graphql/repository/issues/GET_ISSUES.js","graphql/repository/issues/labels/GET_LABELS.js","graphql/repository/issues/ADD_ISSUE.js","graphql/repository/issues/UPDATE_ISSUE.js","graphql/index.js","components/issues/issues.jsx","views/post.js","components/issues/labels/labels.jsx","components/head/head.jsx","views/home.js","views/edit.js","App.js","serviceWorker.js","index.js"],"names":["SET_CONFIG","Symbol","SET_PAGEINFO","SET_NEXTPAGE","SET_ISSUE","SET_ISSUES","combineReducers","setIssue","state","action","type","Types","data","Object","assign","setIssues","issues","console","log","setConfig","config","client","variables","owner","name","first","after","pageInfo","store","createStore","reducers","applyMiddleware","thunk","dispatch","setIssueEdit","edit","Repos","gql","GET_ISSUE","GET_ISSUE_EXPORT","GET_ISSUES","GET_ISSUES_EXPORT","GET_LABELS","GET_LABELS_EXPORT","ADD_ISSUE","ADD_ISSUE_EXPORT","UPDATE_ISSUE","UPDATE_ISSUE_EXPORT","Issues","props","query","notifyOnNetworkStatusChange","fetchPolicy","loading","error","refetch","networkStatus","fetchMore","issueEdges","repository","edges","localStorage","setItem","JSON","stringify","toGithubComment","index","url","window","open","cardIssues","map","item","date","Date","node","createdAt","cardLabels","labels","item2","Badge","pill","style","backgroundColor","color","id","key","title","description","Card","Header","onClick","e","number","variant","stopPropagation","history","push","toEditIssues","Title","toLocaleString","Body","border","dangerouslySetInnerHTML","__html","bodyHTML","Footer","alias","fallback-src","class","reactions","totalCount","comments","className","Post","handleClick","getChilder","params","match","msg","this","Container","CardIssue","Button","Component","connect","ownProps","IssuesLabels","labelsEdges","CardLabels","Head","toIndex","onToAddNewSpace","onShowLabels","setState","showLabels","onLabelsClose","desc","message","spaces","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Form","inline","FormControl","placeholder","varint","Modal","show","onHide","animation","closeButton","Home","scrollNew","scrollHeight","document","documentElement","scrollTop","clientHeight","lodding","getItem","getNewPage","parse","endCursor","hasNextPage","alert","removeEventListener","newPage","getNextPage","newPages","lastPageInfo","addEventListener","Edit","getType","chars","onChangeTitle","target","value","onValueChange","Plain","serialize","onClickAddNewPost","labelIds","labelEdges","isChecked","filter","x","repositoryId","body","mutate","mutation","then","res","removeItem","onClickEditOldPost","issueState","issue","onClickReturn","onShowCheckbox","checked","renderBlock","editor","next","attributes","children","onKeyDown","event","onSpace","onBackspace","onEnter","selection","isExpanded","startBlock","start","text","slice","offset","replace","preventDefault","setBlocks","wrapBlock","moveFocusToStartOfNode","delete","unwrapBlock","end","length","splitBlock","deserialize","titleStyle","fontSize","cg","now","manyDay","Math","floor","day","getDay","content","parseInt","issueLables","isUpdate","le","includes","ButtonSubmit","ButtonReturn","CardTitle","EditorContent","onChange","CheckLable","Check","label","hidden","defaultChecked","Control","defaultValue","marginTop","ButtonGroup","undefined","location","token","setToken","CryptoJS","AES","decrypt","toString","enc","Utf8","httpLink","HttpLink","uri","headers","Authorization","ApolloClient","link","cache","InMemoryCache","App","path","exact","component","to","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28b183f3.chunk.js","sourcesContent":["export const SET_CONFIG = Symbol('SET_CONFIG')\r\nexport const SET_PAGEINFO = Symbol('SET_PAGEINFO')\r\nexport const SET_NEXTPAGE = Symbol('SET_NEXTPAGE')\r\nexport const SET_PREVIOUSPAGE = Symbol('SET_PREVIOUSPAGE')\r\nexport const GET_STATE = Symbol('GET_STATE')\r\nexport const SET_ISSUE = Symbol('SET_ISSUE')\r\nexport const SET_ISSUES = Symbol('SET_ISSUES')\r\nexport const SET_CLIENT = Symbol('SET_CLIENT')\r\nexport const SET_REPOS = Symbol('SET_REPOS')\r\nexport const SET_ISSUE_ADD_STATUS = Symbol('SET_ISSUE_ADD_STATUS')","import {combineReducers} from 'redux'\r\nimport { setIssue,setIssues,setConfig } from \"./ReposReducers\"\r\n\r\nexport default combineReducers({\r\n    setIssue,setIssues,setConfig\r\n})","// 它就是将来真正要用到的数据，我们将其统一放置在reducers.js文件\r\nimport defaultState from '../state.js'\r\nimport * as Types from '../../actions/Types'\r\nfunction setIssue(state = {},action){\r\n    // console.log(\"setIssue Type:\",action.type)\r\n    switch(action.type){\r\n        case Types.SET_ISSUE:\r\n            // state.issue = action.data\r\n            //console.log(\"得到\",state,\"data\",action,action.type)\r\n            //return state\r\n            // console.log(\"action.data\",action.data,state,typeof state)\r\n            state = action.data\r\n            return Object.assign({}, state) //直接返回state是不会自动的刷新的\r\n        default:\r\n            return state\r\n    }\r\n}\r\nfunction setIssues(state = {},action){\r\n    // console.log(\"setIssues Type:\",action.type)\r\n    switch(action.type){\r\n        case Types.SET_ISSUES:\r\n        state.issues = action.data\r\n        console.log(\"得到\",state,\"data\",action,action.type)\r\n        //return state\r\n        return Object.assign({},state)\r\n        default:\r\n        return state\r\n    }\r\n}\r\nfunction setConfig (state = {},action){\r\n    switch(action.type){\r\n        case Types.SET_CONFIG:\r\n            // console.log(\"设置配置\", action.data)\r\n            state.config = action.data\r\n            state.client = action.data.client\r\n            state.variables = {\r\n                owner: action.data.owner,\r\n                name: action.data.name,\r\n                first: 10,\r\n                after: null\r\n            }\r\n            return Object.assign({}, state)\r\n        case Types.SET_PAGEINFO:\r\n            state.pageInfo = state.data\r\n            return Object.assign({}, state)\r\n        case Types.SET_NEXTPAGE:\r\n            state.variables.after = action.data\r\n            // console.log(\"设置下一页的after变量\")\r\n            return Object.assign({}, state)\r\n        default:\r\n        //console.log(\"得到\",state,\"data\",action,action.type)\r\n        return state\r\n    }\r\n}\r\nfunction pageTitle (state = defaultState.pageTitle,action) {\r\n// 不同的action有不同的处理逻辑\r\n    switch (action.type) {\r\n        case 'SET_PAGE_TITLE':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nfunction user (state = defaultState.user, action){\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport {\r\n    setIssue,\r\n    setIssues,\r\n    setConfig,\r\n    pageTitle,\r\n    user\r\n}","// index.js\r\n// applyMiddleware: redux通过该函数来使用中间件\r\n// createStore: 用于创建store实例\r\nimport { applyMiddleware, createStore } from 'redux'\r\n\r\n// 中间件，作用：如果不使用该中间件，当我们dispatch一个action时，需要给dispatch函数传入action    \r\n// 对象；但如果我们使用了这个中间件，那么就可以传入一个函数，\r\n// 这个函数接收两个参数:dispatch和    getState。这个dispatch可以在将来的异步请求完成后使用，对于异步action很有用\r\nimport thunk from 'redux-thunk'\r\n\r\n// 引入reducer\r\nimport reducers from './reducers/index'\r\n\r\n// 创建store实例\r\nlet store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunk)\r\n)\r\n//console.log(\"引入了store\",reducers)\r\nexport default store","import * as Types from \"./Types\"\r\nexport const setIssues = (data = {}) => {\r\n    return (dispatch)=>{\r\n        console.log(\"setIssues吉祥物\")\r\n        // client.query({\r\n        //     query: GET_ISSUSE, \r\n        //     variables: { owner: cg.owner, name: cg.name, first, after },    \r\n        // }).then(res=>{\r\n        //     dispatch({type:Types.SET_ISSUES, data: res.data.repository.issues})\r\n        // })\r\n    }\r\n}\r\n// // 设置post内容\r\nexport const setIssue = (data = {}) => {\r\n    return (dispatch)=>{\r\n        console.log(\"setIssue吉祥物\")\r\n\r\n        // client.query({query:repos.getIssue(number,first,after)}).then(res=>{\r\n        //     let issue = res.data.repository.issue\r\n        //     dispatch({type:Types.SET_ISSUE, data:issue})\r\n        // }) \r\n    }\r\n}\r\n// // 设置post内容之增加post\r\nexport const setIssueEdit = ( data = {})=> {\r\n    return (dispatch)=>{\r\n        console.log(\"setIssueEdit吉祥物\")\r\n        dispatch({type:Types.SET_ISSUE,data:{edit:\"吉祥物\"}})\r\n        // client.mutate({\r\n        //     mutation : repos.setIssueAdd(content,title)\r\n        // }).then(res=>{\r\n        //     console.log(\"增加后的结果\",res)\r\n        //     dispatch({type:Types.SET_ISSUE_ADD_STATUS, data:res})\r\n        // })\r\n    }\r\n}\r\n// // 异步获取内容\r\n// export const setRepos = (type,start,end) => {\r\n//     return (dispatch)=>{\r\n//         dispatch({type: Types.SET_REPOS})\r\n//     }\r\n//   };\r\n\r\n//   // 设置page信息\r\n//   export const setPageInfo = (data={})=>{\r\n//     return (dispatch)=>{\r\n//         dispatch({type: Types.SET_PAGEINFO, data})\r\n//     }\r\n//   }\r\n//   // 设置下一页信息\r\n//   export const setNextPage = (data={})=>{\r\n//     return (dispatch)=>{\r\n//         dispatch({type: Types.SET_NEXTPAGE, data})\r\n//     }\r\n//   }","import * as Repos from \"./ReposActions\";\r\nlet Actions = Repos\r\n// Repos\r\nexport const setIssues = Repos.setIssues;\r\n// export const setPageInfo = Repos.setPageInfo;\r\n// export const setNextPage = Repos.setNextPage;\r\n// // issue\r\nexport const setIssue = Repos.setIssue;\r\nexport const setIssueEdit = Repos.setIssueEdit;\r\n\r\n// All\r\nexport default Actions","import gql from \"graphql-tag\";\r\nexport default  gql`\r\nquery Issues($owner:String!, $name:String!, $number: Int!, $first: Int!, $after: String){\r\n  repository(owner: $owner, name: $name) {\r\n    issue(number: $number){\r\n      id\r\n      number\r\n      title\r\n      bodyHTML\r\n      body\r\n      createdAt\r\n      labels(first:$first,after:$after){\r\n        edges{\r\n          node{\r\n            id\r\n            name\r\n            color\r\n            description\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`","import gql from \"graphql-tag\";\r\nexport default  gql`\r\nquery Issues($owner:String!, $name:String!, $number: Int, $first: Int!, $after: String){\r\n  repository(owner: $owner, name: $name) {\r\n    issue(number: $number){\r\n      id\r\n      number\r\n      title\r\n      bodyHTML\r\n      body\r\n      author{\r\n        login\r\n      }\r\n      createdAt\r\n      labels(first:10){\r\n        edges{\r\n          node{\r\n            id\r\n            name\r\n            color\r\n            description\r\n          }\r\n        }\r\n      }\r\n      comments( first: $first, after: $after) {\r\n        totalCount\r\n        edges{\r\n          node{\r\n            bodyHTML\r\n            author{\r\n              login\r\n            }\r\n            reactions(content:HEART){\r\n              totalCount\r\n            }\r\n            createdAt\r\n          }\r\n          cursor\r\n        }\r\n      }\r\n      reactions(content:HEART){\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n}\r\n`","import gql from \"graphql-tag\";\nexport default  gql`\nquery Issues($owner:String!, $name:String!, $first: Int!, $after: String){\n    repository(owner: $owner, name: $name) {\n        issues(first: $first, after: $after, orderBy:{field:CREATED_AT,direction:DESC}){\n            totalCount\n            pageInfo {\n                endCursor\n                startCursor\n                hasNextPage\n                hasPreviousPage\n            } \n            edges {\n                node {\n                    id\n                    number\n                    title\n                    bodyHTML\n                    body\n                    author{\n                        login\n                    }\n                    createdAt\n                    comments {\n                        totalCount\n                    }\n                    labels(first:10){\n                        edges{\n                            node{\n                                id\n                                name\n                                color\n                                description\n                            }\n                        }\n                    }\n                    reactions(content:HEART){\n                        totalCount\n                    }\n                }\n            }\n        }\n    }\n}\n`","import gql from \"graphql-tag\";\nexport default  gql`\nquery IssuesLabels($owner: String!, $name: String!, $first: Int!, $after: String) {\n  repository(owner: $owner, name: $name) {\n    labels(first: $first, after: $after) {\n      totalCount\n      pageInfo {\n        endCursor\n        startCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        node {\n          id\n          description\n          color\n          url\n          name\n        }\n      }\n    }\n  }\n}\n`\n","import gql from \"graphql-tag\";\r\n/*\r\n{\r\n  \"repositoryId\":\"MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=\",\r\n  \"title\":\"使用apollo测试的题目\",\r\n  \"body\":\"## 使用apollo测试后的body\",\r\n  \"labelIds\": [\"MDU6TGFiZWwxMzU2ODYzMTMz\"]\r\n}\r\n*/\r\nexport default gql`\r\nmutation CreateIssuePayload($repositoryId:ID!,$title:String!,$body:String!,$labelIds:[ID!]){\r\n  createIssue(input:{ repositoryId:$repositoryId,title:$title,,body:$body, labelIds: $labelIds}){\r\n   \tissue{\r\n\t  id\r\n      number\r\n      title\r\n      bodyHTML\r\n      body\r\n      author{\r\n        login\r\n      }\r\n      createdAt\r\n      labels(first:10){\r\n        edges{\r\n          node{\r\n            id\r\n            name\r\n            color\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`","import gql from 'graphql-tag'\r\n/*\r\n{\r\n  \"id\":\"MDU6SXNzdWU1MTQwODM3NDQ=\",\r\n  \"state\": \"OPEN\",\r\n  \"title\":\"使用apollo测试的题目\",\r\n  \"body\":\"## 使用apollo测试后的body\\r\\n测试更新2\",\r\n  \"labelIds\": [\"MDU6TGFiZWwxMzU2ODYzMTMz\"]\r\n}\r\n*/\r\nexport default gql`\r\nmutation UpdateIssuePayload($id:ID!,$state:IssueState,$title:String!,$body:String!,$labelIds:[ID!]){\r\n  updateIssue(input:{ id:$id,state:$state,title:$title,,body:$body, labelIds: $labelIds}){\r\n   \tissue{\r\n\t\t\tid\r\n      number\r\n      title\r\n      bodyHTML\r\n      body\r\n      author{\r\n        login\r\n      }\r\n      state\r\n      createdAt\r\n      labels(first:10){\r\n        edges{\r\n          node{\r\n            id\r\n            description\r\n            color\r\n            url\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`","import GET_ISSUE_EXPORT from \"./repository/issues/GET_ISSUE\"\r\nimport GET_ISSUE_COMMENTS_EXPORT from \"./repository/issues/GET_ISSUE_COMMENTS\"\r\nimport GET_ISSUES_EXPORT from \"./repository/issues/GET_ISSUES\"\r\nimport GET_LABELS_EXPORT from \"./repository/issues/labels/GET_LABELS\"\r\nimport ADD_ISSUE_EXPORT from \"./repository/issues/ADD_ISSUE\"\r\nimport UPDATE_ISSUE_EXPORT from \"./repository/issues/UPDATE_ISSUE\"\r\n\r\nexport const GET_ISSUE =  GET_ISSUE_EXPORT\r\nexport const GET_ISSUE_COMMENTS = GET_ISSUE_COMMENTS_EXPORT\r\nexport const GET_ISSUES =  GET_ISSUES_EXPORT\r\nexport const GET_LABELS = GET_LABELS_EXPORT\r\n\r\nexport const ADD_ISSUE = ADD_ISSUE_EXPORT\r\nexport const UPDATE_ISSUE = UPDATE_ISSUE_EXPORT\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport {GET_ISSUES} from \"../../graphql\"\r\nimport { Card, Badge} from \"react-bootstrap\";\r\n\r\nconst Issues = (props) => (\r\n  <Query \r\n    query={GET_ISSUES} \r\n    variables={ props.variables }\r\n    notifyOnNetworkStatusChange  \r\n    fetchPolicy=\"cache-and-network\"\r\n    >\r\n    {({ loading, error, data, refetch, networkStatus,fetchMore  }) => {\r\n      if (loading) return <p>Loading...</p>;\r\n      if (error) return <p>Error :(</p>;\r\n      // console.log(\"状态码\",networkStatus )\r\n      // console.log(\"内容\", data)\r\n      // console.log(\"变量\",props.variables)\r\n      // console.log(\"页面\",props.pageInfo)\r\n      let issueEdges = data.repository.issues.edges\r\n      // let totalCount = data.repository.issues.totalCount\r\n      let pageInfo = data.repository.issues.pageInfo\r\n      localStorage.setItem(\"pageInfo\",JSON.stringify(pageInfo))\r\n      localStorage.setItem(\"issuesLodding\",false)\r\n      let toGithubComment = (index) =>{\r\n        let url = 'https://github.com/abearxiong/abearxiong.github.io/issues/' + index\r\n        window.open(url)\r\n      }\r\n      let toEditIssues = (e, index) => {\r\n        // e.preventdefault().\r\n        e.stopPropagation()\r\n        console.log(\"editIssues\", this)\r\n        // TODO: 判断是否缓存有内容\r\n        props.props.history.push(\"/edit/\"+index)\r\n      }\r\n      const cardIssues = issueEdges.map(item => {\r\n        let date = new Date(item.node.createdAt);\r\n        let cardLabels = item.node.labels.edges.map(item2=>{\r\n            return (<Badge pill  style={{backgroundColor:\"#\"+item2.node.color }} id={item2.node.id} key={item2.node.id} title={item2.node.description}>\r\n            {item2.node.name} \r\n         </Badge>)\r\n        })\r\n        return (\r\n        <Card key={item.node.id}>\r\n            <Card.Header onClick={e=>toGithubComment(item.node.number)}>{item.node.title}<Badge variant=\"light\" onClick={e=>toEditIssues(e, item.node.number)} title={item.node.id}>编辑</Badge></Card.Header>\r\n            <Card.Title>{date.toLocaleString()}</Card.Title>\r\n            <Card.Body>\r\n                { cardLabels }\r\n                <Card border=\"light\"  dangerouslySetInnerHTML={{ __html: item.node.bodyHTML }}></Card>\r\n            </Card.Body>    \r\n            <Card.Footer>\r\n              <Badge variant=\"light\" onClick={e=>toGithubComment(item.node.number)}>\r\n                    <g-emoji\r\n                      alias=\"heart\"\r\n                      fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\"\r\n                      class=\"emoji mr-1\"\r\n                    >\r\n                      ❤️\r\n                    </g-emoji>\r\n                  {item.node.reactions.totalCount}\r\n              </Badge>\r\n\r\n              <Badge variant=\"light\" onClick={e=>toGithubComment(item.node.number)}>\r\n                <g-emoji\r\n                  class=\"g-emoji\"\r\n                  alias=\"speech_balloon\"\r\n                  fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png\"\r\n                >\r\n                  💬\r\n                </g-emoji>\r\n                {item.node.comments.totalCount}\r\n              </Badge>\r\n            </Card.Footer>\r\n        </Card>\r\n        )}\r\n      )\r\n      return (\r\n        <Card border=\"light\" className=\"issues-wrapper\">\r\n            {cardIssues}\r\n        </Card>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\nexport default Issues;","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Button\r\n  // Form, ButtonGroup\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIssue } from \"../actions\";\r\nimport Issues from \"../components/issues/issues\"\r\n// import {ADD_ISSUE} from \"../graphql\"\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props)\r\n    let params = props.match.params;\r\n    let number = params.number ? params.number : 6;\r\n    this.state = { \r\n     msg: \"msg hhh\",\r\n     number,\r\n     variables:{\r\n        owner: \"abearxiong\", \r\n        name: \"abearxiong.github.io\", \r\n        first:10 \r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let number = this.state.number;\r\n    console.log(\"Post初始化\", number);\r\n  }\r\n  handleClick = () => {\r\n\r\n  }\r\n  getChilder =(pageInfo) =>{\r\n    // console.log(\"父层\", pageInfo)\r\n  }\r\n  render() {\r\n    // 公用会报错\r\n    // const { loading, error, data } = useQuery(GET_ISSUE);\r\n    // if (loading) return (<Card>Loading...</Card>)\r\n    // if (error) return (<Card>Error :(</Card>)\r\n    // console.log(data)\r\n    let CardIssue;\r\n    return (\r\n\r\n      <Container className=\"xx-space-post\">\r\n        <Issues variables={this.state.variables} pageInfo={this.getChilder} />\r\n        <Card>{CardIssue}</Card>\r\n        <Card>放评论的地方</Card>\r\n        <Button onClick={e => this.handleClick(e)}>Evernote</Button>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = state => {\r\n  console.log(\"state 映射\", state);\r\n  return {\r\n    state\r\n  };\r\n};\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIssue(data) {\r\n      dispatch(setIssue(data));\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Post);\r\n//export default Post;\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport {GET_LABELS} from \"../../../graphql\"\r\nimport { Card, Badge} from \"react-bootstrap\";\r\n\r\nconst IssuesLabels = (props) => (\r\n  <Query \r\n    query={GET_LABELS} \r\n    variables={ props.variables }\r\n    notifyOnNetworkStatusChange  \r\n    fetchPolicy=\"cache-and-network\"\r\n    >\r\n    {({ loading, error, data, refetch, networkStatus,fetchMore  }) => {\r\n      if (loading) return <p>Loading...</p>;\r\n      if (error) return <p>Error :(</p>;\r\n    //   console.log(\"状态码\",networkStatus )\r\n      // console.log(\"内容\", data)\r\n      console.log(\"变量\",props.variables)\r\n      // console.log(\"页面\",props.pageInfo)\r\n      let labelsEdges = data.repository.labels.edges\r\n    //   let totalCount = data.repository.labels.totalCount\r\n      let pageInfo = data.repository.labels.pageInfo\r\n      localStorage.setItem(\"pageInfo\",JSON.stringify(pageInfo))\r\n    //   localStorage.setItem(\"labelsLodding\",false)\r\n      let CardLabels = labelsEdges.map(item=>{\r\n        return <Badge >{item.node.name}</Badge>\r\n      })\r\n      return (\r\n        <Card border=\"light\" className=\"Labels-wrapper\">\r\n            <div>{CardLabels}\r\n            </div>\r\n        </Card>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\nexport default IssuesLabels;","import React, { Component } from 'react';\r\nimport { Button, Navbar, Nav, NavDropdown, Form, FormControl, Modal } from 'react-bootstrap';\r\nimport './head.scss'\r\nimport IssuesLabels from \"../issues/labels/labels\"\r\nclass Head extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"head\",\r\n            desc: \"显示关于应用中的头部的信息\",\r\n            message: \"test\",\r\n            spaces: [],\r\n            showLabels: false\r\n        };\r\n        // console.log(\"props:\", props, window.location.href)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    toIndex = (e) => {\r\n        //console.log(e)\r\n        //console.log(\"props\",this.props,'state',this.state)\r\n        this.props.history.push(\"/\")\r\n    }\r\n    onToAddNewSpace = (e) => {\r\n        //console.log(\"添加新的内容\")\r\n        this.props.history.push(\"/edit/new\")\r\n    }\r\n    onShowLabels = () => {\r\n        this.setState({\r\n            showLabels: true\r\n        })\r\n    }\r\n    onLabelsClose = () =>{\r\n        this.setState({\r\n            showLabels: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar className=\"Header\" bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#\">GitHub空间</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {/* <Nav.Link href=\"#\">Home</Nav.Link> */}\r\n                        <Nav.Link onClick={e => this.onToAddNewSpace()}>增加</Nav.Link>\r\n                        <Nav.Link onClick={e => this.onShowLabels()}>标签</Nav.Link>\r\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"ac\">Action</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button varint=\"outline-success\">Search</Button>\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n                <Modal show={this.state.showLabels} onHide={e=>this.onLabelsClose()} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>显示标签</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <IssuesLabels variables={this.props.state.setConfig.variables}/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={e=>this.onLabelsClose()}>\r\n                            Close\r\n          </Button>\r\n                        <Button variant=\"primary\" onClick={e=>this.onLabelsClose()}>\r\n                            Save Changes\r\n          </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Navbar>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { Component } from \"react\";\r\nimport {Container, Card} from \"react-bootstrap\";\r\nimport { setIssues } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Head from \"../components/head/head\";\r\nimport Issues from \"../components/issues/issues\"\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"首页\",\r\n      description: \"这里是显示内容的主页\",\r\n      message: \"test\",\r\n      spaces: [],\r\n      newPages:[],\r\n      lastPageInfo: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let pageInfo = { endCursor: null, hasNextPage: true  }\r\n    localStorage.setItem(\"pageInfo\",JSON.stringify(pageInfo))\r\n    localStorage.setItem(\"issuesLodding\",false)\r\n    window.addEventListener('scroll',this.scrollNew)\r\n    // console.log(this.state.description)\r\n    this.getNewPage();\r\n  }\r\n  componentWillUnmount (){\r\n    window.removeEventListener('scroll',this.scrollNew)\r\n  }\r\n  scrollNew = ()=>{\r\n    let scrollHeight = document.documentElement.scrollHeight\r\n    let scrollTop = document.documentElement.scrollTop\r\n    let clientHeight = document.documentElement.clientHeight\r\n    let lodding = localStorage.getItem(\"issuesLodding\")\r\n    // console.log(\"height\",scrollHeight,scrollTop,clientHeight)\r\n    if(scrollTop + clientHeight > scrollHeight - 2&&lodding!==\"lodding\"){\r\n      // 单纯的相等的情况会出现 浮点数的情况，就不能执行\r\n      this.getNewPage()\r\n      // console.log(\"新一页\")\r\n      localStorage.setItem(\"issuesLodding\",\"lodding\")\r\n    }\r\n  }\r\n  getNewPage = ()=>{\r\n    // window.removeEventListener(\"scroll\",this.scrollNew) // 因为奇葩的问题导致内容重复问题\r\n    let pageInfo = JSON.parse(localStorage.getItem(\"pageInfo\"))\r\n    let after = pageInfo.endCursor\r\n    let variables = this.props.state.setConfig.variables\r\n    variables.after = after\r\n    if(!pageInfo.hasNextPage){\r\n      alert(\"没有更多了\")\r\n      window.removeEventListener(\"scroll\",this.scrollNew)\r\n      return \r\n    }\r\n    // console.log(\"key:\", pageInfo.endCursor)\r\n    let newPage = (<Issues \r\n      key = {pageInfo.endCursor}\r\n      variables={variables} \r\n      props={{...this.props}}\r\n      getNextPage={this.getNextPage} \r\n      \r\n      />    )\r\n    let newPages = this.state.newPages\r\n    newPages.push(newPage)\r\n    // console.log(newPages)\r\n    this.setState({\r\n      newPages,\r\n    })\r\n  }\r\n  render() { \r\n    return (\r\n      <Container className=\"xx-space\">\r\n        <Head {...this.props} />\r\n        <Card border=\"light\"> \r\n            {this.state.newPages.map(item=>item)}\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = state => {\r\n  console.log(\"state 映射\", state);\r\n  return {\r\n    state\r\n  };\r\n};\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIssues(data) {\r\n      dispatch(setIssues(data));\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React, { Component } from 'react';\r\nimport {Container,Card,Button,Form, ButtonGroup, Badge} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setIssueEdit } from '../actions';\r\nimport { Editor } from 'slate-react';\r\n// import { Value } from 'slate';\r\nimport Head from '../components/head/head'\r\nimport Plain from 'slate-plain-serializer'\r\nimport {ADD_ISSUE,GET_LABELS,GET_ISSUE,UPDATE_ISSUE} from \"../graphql\"\r\n\r\n// const initialValue = Value.fromJSON(initialJson)\r\nclass Edit extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    // console.log(\"props:\",props)\r\n    let params = props.match.params\r\n    let number = params.number?params.number:\"new\"\r\n    //let content = \"今天发生了什么愉快的事情呢？\"\r\n    this.state = {\r\n      msg:\"msg hhh\",\r\n      number,\r\n      // title,\r\n      // value:initialValue,\r\n      value: Plain.deserialize(\"真是开心啊\"),\r\n      createdAt: new Date().toLocaleString(),\r\n      titleStyle:{\r\n        color: '#cccccc',\r\n        fontSize: 10\r\n      },\r\n      labelEdges: [],\r\n      issue:{\r\n        labels:{\r\n          edges:[]\r\n        }\r\n      }\r\n    }\r\n  }  \r\n  componentDidMount () {\r\n    // 获取Labels\r\n    let client = this.props.state.setConfig.client\r\n    let cg = this.props.state.setConfig.config\r\n    client.query({\r\n      query: GET_LABELS, \r\n      variables: { owner: cg.owner, name: cg.name, first:100},    \r\n      }).then(res=>{\r\n          let labelEdges = res.data.repository.labels.edges\r\n          // console.log(\"res\",labelEdges)\r\n          this.setState({labelEdges})\r\n\r\n    })\r\n    let setIssueEdit = this.props.setIssueEdit\r\n    let number = this.state.number\r\n    setIssueEdit()\r\n    if(number === \"new\"){\r\n      /* q = d - 1324 * 24 * 60 * 60  \r\n      *  1443365529298 是第一天\r\n      *  Sun Sep 27 2015 22:52:09 GMT+0800 (中国标准时间)\r\n      */\r\n      let now = new Date()\r\n      let show_day = [\"星期天\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]\r\n      let manyDay = Math.floor((now - 1443365529298)/(24 * 60 * 60 * 1000)) + 1// 往下 取整\r\n      let day = now.getDay()\r\n      let title = `奇幻旅程${manyDay} ${show_day[day]}`\r\n      // 如果新建文章的情况下，如果本地已经有了的话，直接设置\r\n      title = localStorage.getItem('title')?localStorage.getItem('title'):title\r\n      let content = localStorage.getItem('content')?localStorage.getItem('content'):\"真是开心啊\"\r\n      this.setState({title,value: Plain.deserialize(content)})\r\n    }else{\r\n      // setIssueEdit({number}) // number first after 后面两个是评论的\r\n      // console.log(\"number\",number,typeof number)\r\n      // 获取具体的某一个issue的内容\r\n      client.query({\r\n        query: GET_ISSUE,\r\n        variables:{\r\n          owner:cg.owner,\r\n          name: cg.name,\r\n          number: parseInt(number),\r\n          first: 100,\r\n          after: null\r\n        }\r\n      }).then(res=>{\r\n        // console.log(\"get issue\",res.data)\r\n        let issue = res.data.repository.issue\r\n        let labelEdges = issue.labels.edges\r\n        let issueLables = labelEdges.map(item=>item.node.name)\r\n        this.setState({\r\n          isUpdate: true,\r\n          issue:issue,\r\n          // issueId: issue.id,\r\n          issueLables: issueLables,\r\n          // issueCreatedAt: issue.createdAt,\r\n          // issueBody: issue.body,\r\n          // issueNumber: issue.number,\r\n          // issueTitle: issue.title,\r\n          issueState: \"OPEN\",\r\n          title: issue.title,\r\n          value: Plain.deserialize(issue.body),\r\n        })\r\n        let le = this.state.labelEdges\r\n        le.map(item=>{\r\n          // console.log(item.node.name,issueLables)\r\n          if(issueLables.includes(item.node.name) ){\r\n            // console.log(item.node.name,issueLables,\"IN\")            \r\n            item.node.checked = true\r\n            item.node.isChecked = true\r\n          }\r\n          return item\r\n        })\r\n        this.setState({\r\n          labelEdges:le\r\n        })\r\n      })\r\n    }\r\n    // console.log(\"Edit初始化\",number,this.props)\r\n\r\n\r\n  }\r\n  getType = chars => {\r\n    switch (chars) {\r\n      case '*':\r\n      case '-':\r\n      case '+':\r\n        return 'list-item'\r\n      case '>':\r\n        return 'block-quote'\r\n      case '#':\r\n        return 'heading-one'\r\n      case '##':\r\n        return 'heading-two'\r\n      case '###':\r\n        return 'heading-three'\r\n      case '####':\r\n        return 'heading-four'\r\n      case '#####':\r\n        return 'heading-five'\r\n      case '######':\r\n        return 'heading-six'\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n  onChangeTitle = (e)=>{\r\n    let title = e.target.value\r\n    if (title !== this.state.title) {\r\n      localStorage.setItem('title', title)\r\n    }\r\n    this.setState({\r\n      title\r\n    })\r\n  }\r\n  onValueChange = ({value}) =>{\r\n    // Check to see if the document has changed before saving.\r\n    if (value.document !== this.state.value.document) {\r\n      // const content = JSON.stringify(value.toJSON())\r\n      // localStorage.setItem('content', content)\r\n      localStorage.setItem('content', Plain.serialize(value))\r\n      // console.log(content)\r\n    }\r\n    this.setState({value})\r\n    // console.log(this.state)\r\n  }\r\n  onClickAddNewPost = ()=>{\r\n    const { client,config } = this.props.state.setConfig\r\n    // COMPLETED: 1. 获取actions 2. 执行提交内容\r\n    // const value = JSON.stringify(this.state.value.document)\r\n    let value = Plain.serialize(this.state.value)\r\n    let title = this.state.title\r\n    let labelIds= this.state.labelEdges.map(item=>{\r\n      if(item.node.isChecked){\r\n        return item.node.id\r\n      }else{\r\n        return null\r\n      }\r\n    })\r\n    labelIds = labelIds.filter(function(x){return x!==null})\r\n    let variables = {repositoryId:config.repositoryId,labelIds,body:value,title}\r\n    // console.log(value,labelIds,variables)\r\n    // PRETODO: 获取lables和设置lables，获取仓库ID\r\n    client.mutate({\r\n          mutation : ADD_ISSUE,\r\n          variables\r\n      }).then(res=>{\r\n        // console.log(\"res结果\",res)\r\n        // this.props.history.push(\"/\")\r\n        // window.location.href=\"/\"\r\n        this.props.history.push(\"/\")\r\n      })\r\n    localStorage.removeItem('title')\r\n    localStorage.removeItem('content')\r\n  }\r\n  onClickEditOldPost = () => {\r\n    const { client } = this.props.state.setConfig\r\n    let value = Plain.serialize(this.state.value)\r\n    let title = this.state.title\r\n    let state = this.state.issueState\r\n    let labelIds= this.state.labelEdges.map(item=>{\r\n      if(item.node.isChecked){\r\n        return item.node.id\r\n      }else{\r\n        return null\r\n      }\r\n    })\r\n    labelIds = labelIds.filter(function(x){return x!==null})\r\n    let variables = {id:this.state.issue.id,state,labelIds,body:value,title}\r\n    console.log(value,labelIds,variables,typeof this.state.issue.id)\r\n    // PRETODO: 获取lables和设置lables，获取仓库ID\r\n    client.mutate({\r\n          mutation : UPDATE_ISSUE,\r\n          variables\r\n      }).then(res=>{\r\n        // console.log(\"res结果\",res)\r\n        this.props.history.push(\"/\")\r\n      })\r\n    localStorage.removeItem('title')\r\n    localStorage.removeItem('content')\r\n  }\r\n  onClickReturn = ()=>{\r\n    this.props.history.push(\"/\")\r\n  }\r\n  onShowCheckbox=(e)=>{\r\n    // console.log(\"e.target.data\",e.target.value,e.target,e.target.checked,this.state.labelEdges)\r\n    let isChecked = e.target.checked\r\n    let value = e.target.value\r\n    let labelEdges = this.state.labelEdges\r\n    if(isChecked){\r\n      labelEdges[value].node.isChecked=true\r\n    }else{\r\n      labelEdges[value].node.isChecked=false\r\n    }\r\n    this.setState({labelEdges})\r\n    console.log(\"this.labels\",this.state.labelEdges)\r\n  }\r\n  render() {\r\n    // console.log(\"this.props\",this.props)\r\n    let ButtonSubmit = <Button onClick = {(e)=>this.onClickAddNewPost(e)}>增加</Button>\r\n    let ButtonReturn = <Button variant=\"dark\" onClick = {(e)=>this.onClickReturn(e)}>返回</Button>\r\n    let CardTitle = <Card border=\"light\" style={this.state.titleStyle}>{this.state.createdAt}</Card>\r\n    let EditorContent = (\r\n      <Editor \r\n      placeholder = \"编辑的内容\"\r\n      value = {this.state.value}\r\n      onChange = {this.onValueChange}\r\n      />\r\n    )\r\n    let CheckLable = this.state.labelEdges.map((item,index)=>{\r\n      return (<Form.Check \r\n            key={item.node.id}\r\n            type=\"checkbox\"\r\n            name=\"check-labels\"\r\n            label={item.node.name}\r\n            value={index}\r\n            onChange={e=>this.onShowCheckbox(e)}\r\n            hidden={item.node.hidden}\r\n            defaultChecked={item.node.checked}\r\n      /> )\r\n    })\r\n    if(this.state.isUpdate){\r\n      // TODO: 编辑确定，更新内容\r\n      ButtonSubmit = <Button onClick = {(e)=>this.onClickEditOldPost(e)}>更新</Button>\r\n      CardTitle = <Card.Title style={this.state.titleStyle}>{new Date(this.state.issue.createdAt).toLocaleString()}</Card.Title>\r\n    }\r\n    // console.log(\"this.state.data\",this.state)\r\n    return (  \r\n        <Container className=\"xx-space-edit\">\r\n        <Head {...this.props}/>\r\n          <Card>\r\n            <Card className=\"edit-content\">\r\n              <Card.Header><Form.Control type=\"text\" onChange = {(e)=>this.onChangeTitle(e)} placeholder=\"标题\" defaultValue={this.state.title} /></Card.Header>\r\n              <div>\r\n              {\r\n                this.state.issue.labels.edges.map(item=>\r\n                  <Badge pill  style={{backgroundColor:\"#\"+item.node.color }} id={item.node.id} key={item.node.id} title={item.node.description}>\r\n                      {item.node.name} \r\n                  </Badge>) \r\n              }\r\n              </div>\r\n              <Card.Body>\r\n              <Card className=\"edit-wrapper\" border=\"light\">\r\n                <Card className=\"edit\" border=\"light\" >\r\n                  { EditorContent }\r\n                </Card>\r\n                <Card className=\"edit-aside\" border=\"light\" >\r\n                  {CardTitle}\r\n                  <div style={{marginTop: 20}} title=\"要点两下\">\r\n                  {CheckLable}\r\n                  </div>\r\n                </Card>\r\n              </Card> \r\n                </Card.Body>\r\n              <Card.Footer>\r\n                <Card>\r\n                  <ButtonGroup>\r\n                    {ButtonSubmit}\r\n                    {ButtonReturn}\r\n                  </ButtonGroup>\r\n                </Card>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Card>\r\n        </Container>\r\n    );\r\n  }\r\n    /**\r\n   * Render a Slate block.\r\n   *\r\n   * @param {Object} props\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   * @return {Element}\r\n   */\r\n\r\n  renderBlock = (props, editor, next) => {\r\n    const { attributes, children, node } = props\r\n\r\n    switch (node.type) {\r\n      case 'block-quote':\r\n        return <blockquote {...attributes}>{children}</blockquote>\r\n      case 'bulleted-list':\r\n        return <ul {...attributes}>{children}</ul>\r\n      case 'heading-one':\r\n        return <h1 {...attributes}>{children}</h1>\r\n      case 'heading-two':\r\n        return <h2 {...attributes}>{children}</h2>\r\n      case 'heading-three':\r\n        return <h3 {...attributes}>{children}</h3>\r\n      case 'heading-four':\r\n        return <h4 {...attributes}>{children}</h4>\r\n      case 'heading-five':\r\n        return <h5 {...attributes}>{children}</h5>\r\n      case 'heading-six':\r\n        return <h6 {...attributes}>{children}</h6>\r\n      case 'list-item':\r\n        return <li {...attributes}>{children}</li>\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On key down, check for our specific key shortcuts.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onKeyDown = (event, editor, next) => {\r\n    switch (event.key) {\r\n      case ' ':\r\n        return this.onSpace(event, editor, next)\r\n      case 'Backspace':\r\n        return this.onBackspace(event, editor, next)\r\n      case 'Enter':\r\n        return this.onEnter(event, editor, next)\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On space, if it was after an auto-markdown shortcut, convert the current\r\n   * node into the shortcut's corresponding type.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onSpace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    const { start } = selection\r\n    const chars = startBlock.text.slice(0, start.offset).replace(/\\s*/g, '')\r\n    const type = this.getType(chars)\r\n    if (!type) return next()\r\n    if (type === 'list-item' && startBlock.type === 'list-item') return next()\r\n    event.preventDefault()\r\n\r\n    editor.setBlocks(type)\r\n\r\n    if (type === 'list-item') {\r\n      editor.wrapBlock('bulleted-list')\r\n    }\r\n\r\n    editor.moveFocusToStartOfNode(startBlock).delete()\r\n  }\r\n\r\n  /**\r\n   * On backspace, if at the start of a non-paragraph, convert it back into a\r\n   * paragraph node.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onBackspace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n    if (selection.start.offset !== 0) return next()\r\n\r\n    const { startBlock } = value\r\n    if (startBlock.type === 'paragraph') return next()\r\n\r\n    event.preventDefault()\r\n    editor.setBlocks('paragraph')\r\n\r\n    if (startBlock.type === 'list-item') {\r\n      editor.unwrapBlock('bulleted-list')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On return, if at the end of a node type that should not be extended,\r\n   * create a new paragraph below it.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onEnter = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    const { start, end, isExpanded } = selection\r\n    if (isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    if (start.offset === 0 && startBlock.text.length === 0)\r\n      return this.onBackspace(event, editor, next)\r\n    if (end.offset !== startBlock.text.length) return next()\r\n\r\n    if (\r\n      startBlock.type !== 'heading-one' &&\r\n      startBlock.type !== 'heading-two' &&\r\n      startBlock.type !== 'heading-three' &&\r\n      startBlock.type !== 'heading-four' &&\r\n      startBlock.type !== 'heading-five' &&\r\n      startBlock.type !== 'heading-six' &&\r\n      startBlock.type !== 'block-quote'\r\n    ) {\r\n      return next()\r\n    }\r\n\r\n    event.preventDefault()\r\n    editor.splitBlock().setBlocks('paragraph')\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state 映射\",state)\r\n  if(state.setIssue.data !== undefined){\r\n    window.location.href = \"/\"\r\n    // console.log(\"setIssue data\", state.setIssue.data)\r\n  }\r\n  return {\r\n      state\r\n  }\r\n}\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\nreturn {\r\n  setIssueEdit(data){\r\n    dispatch(setIssueEdit(data))\r\n  }\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit)\r\n//export default Edit;\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { Route,HashRouter, Switch,Redirect } from 'react-router-dom';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport {ApolloClient}from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport CryptoJS from 'crypto-js'\r\nimport store from './store';\r\nimport Post from './views/post';\r\nimport Home from './views/home';\r\nimport Edit from './views/edit';\r\nimport * as Types from \"./actions/Types\"\r\n// import Head from './components/head/head'\r\nimport './App.css';\r\n// 私有token上传会自动把token无效；所以加密一下啊 解密\r\n// import CryptoJS from 'crypto-js'\r\n// var decrypted = CryptoJS.AES.decrypt(token,key);\r\n// let token = decrypted.toString(CryptoJS.enc.Utf8);//转化为utf8\r\nconst key = \"xx-space\"\r\nconst token = 'U2FsdGVkX19B3HPXWKdG/BW8oy5ld+5t4WogKry+ve6B0RWRGtSjQlGr32zwr4nn7zBE9woFkj4mWNj8jZv1dg==' // 私有限制权限的token\r\nconst owner = 'abearxiong'  // 仓库拥有者\r\nconst name = 'abearxiong.github.io' // 仓库名字\r\nconst repositoryId = \"MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=\"\r\nconst config = {\r\n  key,\r\n  token,\r\n  owner,\r\n  name,\r\n  repositoryId\r\n}\r\nvar decrypted = CryptoJS.AES.decrypt(config.token,config.key);\r\nlet setToken = decrypted.toString(CryptoJS.enc.Utf8);//转化为utf8\r\n//console.log(token)\r\nconst httpLink = new HttpLink({\r\n    uri: 'https://api.github.com/graphql', // 配置请求url \r\n    headers: { // 配置header\r\n        Authorization: `Bearer ${setToken}`\r\n    }\r\n})\r\nconst client =  new ApolloClient({\r\n    link:  httpLink,\r\n    cache: new InMemoryCache() // 缓存\r\n})\r\n// client.query({\r\n//   query: GET_ISSUES,variables: { owner: \"abearxiong\", name: \"abearxiong.github.io\", first:10 },    }).then(res=>{\r\n//     console.log(\"测试client\",res)\r\n//   })\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    store.dispatch({type: Types.SET_CONFIG, data: { ...config, client }}) // store分发举例，其他库，自动配置\r\n    this.state = {\r\n      description: \"设置关于起始显示的地方\"\r\n    }\r\n  };\r\n  componentDidMount () {\r\n    // console.log(\"App初始化完成\",store)\r\n    \r\n  }\r\n  render() {\r\n    return (   \r\n      <Provider store = {store}>\r\n        <ApolloProvider client={client}>\r\n           <HashRouter>\r\n              <Switch>\r\n                  <Route path=\"/\" exact component={Home}/>\r\n                  <Route path=\"/post/:number\" component={Post}/>\r\n                  <Route path=\"/edit/:number\" component={Edit}/>\r\n                  <Redirect to=\"/\" />\r\n              </Switch>\r\n            </HashRouter>\r\n          </ApolloProvider>   \r\n      </Provider>   \r\n    );\r\n  }\r\n}\r\n// // mapStateToProps：将state映射到组件的props中\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//       user: state.user,\r\n//   }\r\n// }\r\n// // mapDispatchToProps：将dispatch映射到组件的props中\r\n// const mapDispatchToProps = (dispatch, ownProps) => {\r\n// return {\r\n//   setConfig (data) {\r\n//       dispatch(setConfig(data))\r\n//   }\r\n// }\r\n// }\r\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport '@github/g-emoji-element'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}